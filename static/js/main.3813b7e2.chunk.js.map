{"version":3,"sources":["CSSStyles.ts","engine/externalfns/util.ts","reactui/comps/CommandGDButton.tsx","reactui/comps/ConfirmCommandButton.tsx","reactui/comps/TipFC.tsx","reactui/layout/HeaderRow.tsx","reactui/comps/CommandButton.tsx","engine/decimalInterfaces/ExpoCurve.ts","engine/decimalInterfaces/Decimal_ExpoCommand.ts","LIBS/ad-notations.esm.js","reactui/comps/Notation.ts","reactui/comps/DisplayDecimal.tsx","reactui/comps/GoodExpoButton.tsx","engine/decimalInterfaces/currency_functionts.ts","engine/modules/Spells.ts","reactui/comps/SpellDisplay.tsx","engine/modules/GEvents.ts","engine/types/Planet.ts","reactui/comps/HumanPrefix.tsx","reactui/comps/ListedResource.tsx","reactui/comps/PlanetDisplay.tsx","reactui/layout/EventRow.tsx","reactui/comps/PopUpDiv.tsx","engine/modules/KnowledgeUpgrades.ts","reactui/layout/PrestigeDiv.tsx","reactui/layout/NavColumn.tsx","engine/types/BasicCommand.ts","reactui/layout/ResourceColumn.tsx","reactui/layout/MainContainer.tsx","AppThree.tsx","serviceWorker.ts","engine/Datamap.ts","engine/CoreEngine.ts","engine/modules/EnergyModule.ts","engine/modules/FirstCommands.ts","engine/modules/ActiveMemory.ts","index.tsx","engine/Engine.ts"],"names":["flexRow","display","flexDirection","PrestigeUpgradeHave","color","getRandomInt","min","max","Math","ceil","floor","random","MINUTE_MS","SECOND_MS","AUTOSAVE_INTERVAL","canCheat","window","location","href","CommandGDButton","props","command","hidden","disabled","able","onClick","label","description","ConfirmCommandButton","fakeBuy","ev","shiftKey","context","submitCommand","setState","open","state","this","className","warning","style","React","Component","TipFC","undefined","tip","HeaderRow","engine","data","marginRight","save","onContextMenu","event","autosaveToggle","preventDefault","autosave","autosaveCounter","getSaveText","load","reset","firstCommands","toggleCheating","CommandButton","expoI_maxBuyAmount","expo","owned","currency","b","initial","r","coefficient","k","c","dlogresult","Decimal","log","add","div","mul","pow","expoI_buyNCost","n","dec_result","minus","expoCommand_Cost","expoCommand","countFns","get","expoCommand_Able","ep","lessThanOrEqualTo","currencyFns","expoCommand_maxAmmount","expoCommand_maxCost","ammount","Settings","decimal","gte","MAX_VALUE","show","commaRegexp","formatWithCommas","value","decimalPointSplit","toString","split","replace","join","fixMantissaOverflow","places","threshold","powerOffset","pow10","round","mantissa","fromMantissaExponent_noNormalize","exponent","toEngineering","exponentOffset","toFixedEngineering","Notation","prototype","format","placesUnder1000","Number","isFinite","infinite","fromValue_noAlloc","sign","formatVerySmallNegativeDecimal","abs","formatVerySmallDecimal","number","toNumber","formatNegativeUnder1000","formatUnder1000","negativeInfinite","formatNegativeDecimal","formatDecimal","Object","defineProperty","enumerable","configurable","toFixed","formatExponent","noSpecialFormatting","showCommas","ScientificNotation","_super","apply","arguments","__extends","fixedValue","EngineeringNotation","engineering","CustomNotation","letters","mantissaExponentSeparator","separator","_this","length","Error","call","transcribe","normalizedExponent","base","remainder","letterIndex","push","reverse","LettersNotation","CANCER","ABBREVIATIONS","CancerNotation","PREFIXES","PREFIXES_2","StandardNotation","abbreviate","e","index2","prefix","abbreviation","standard","MixedScientificNotation","standard$1","LogarithmNotation","MixedEngineeringNotation","log10","BracketsNotation","table","log6","LN10","wholePartOfLog","decimalPartOfLog","decimalPartTimes36","string","LOG10_MAX_VALUE","InfinityNotation","infinities","infPlaces","formatted","ROMAN_NUMBERS","ROMAN_FRACTIONS","MAX_LOG_10","RomanNotation","romanize","lt","maximums","current","romanized","_i","ROMAN_NUMBERS_1","numberPair","roman","duodecimal","DOT_DIGITS","DotsNotation","dotify","pad","ZALGO_CHARS","HE_COMES","ZalgoNotation","map","_char","array","heComes","scaled","plus","displayPart","zalgoPart","displayChars","Array","from","zalgoIndices","i","zalgoIndex","parseInt","SIGNS","HexNotation","negate","rawValue","toUpperCase","padStart","modifiedLogarithm","x","floorOfLog","log2","previousPowerOfTwo","inputValue","numberOfBits","signs","times","resultValue","padEnd","VOLUME_UNITS","MINIMS","VOLUME_ADJECTIVES","VOWELS","Set","MAX_VOLUME","LOG_MAX_VOLUME","REDUCE_RATIO","ImperialNotation","convertToVolume","logValue","adjectiveIndex","adjective","volIdx","findVolumeUnit","formatMetric","smallStr","checkSmallUnits","big","numBig","volume","checkAlmost","nearMultiple","pluralOrArticle","numBest","bestUnitIndex","bestUnitError","thirdUnitIndex","third","numThird","thirdUnitError","bigAndSmall","toPrecision","almostOrShortOf","deciMinims","addArticle","numSmall","guess","low","high","bigIndex","almost","small","shortOf","bigStr","_short","num","str","has","HOURS","LOG12","ClockNotation","clockwise","hour","clockLow","clockHigh","MAX_INT_DECIMAL","MAX_INT_LOG_10","PRIMES","visitedMarks","fill","sieveLimit","sqrt","mark","LAST_PRIME_INDEX","MAX_PRIME","EXPONENT_CHARACTERS","PrimeNotation","primify","lte","floored","formatFromList","primesFromInt","exp","formatBaseExp","exp2","exp2Ceil","exp2List","formatedExp2","list","out","last","count","findGreatestLtePrimeIndex","middle","prime","factors","factoringValue","ltePrimeIndex","halfFactoring","primeIndex","factor","BARS","LOG8","BarNotation","log8","wholeLog","decimalLog","decimalLog64","parts","SHI","ShiNotation","shi","NUMBER_MAX_VALUE","getShiCharacter","BlindNotation","notationList","SCIENNOT","AllNotation","index","ADNotations","scientific","DisplayDecimal","ExpoButton","datamap","notify","dec","DEC","name","level","change","cost","max_cost","spend","gain","expoCommand_buy","greaterThanOrEqualTo","expoCommand_buyMax","CURRENCY_FUNCTIONS","effortCurrencyFN","decimals","effort","amount","energyCurrencyFN","energy","knowledgeCurrencyFN","events","knowledge","ZCurrencyFN","mana","dXUpgradeCurrencyFN","upgradeDX","yCurrencyFN","charge","ableToCastSpell","spell","resource","manaCost","Spells","castSpell","action","cast_increaseEffort","prestigeUpgrades","plusDeltaXSpellDurationUpgrade","spellTimers","spell1","cast_forceEvent","increaseEffort","spellData","spell1Unlocked","spell_stca","unlockEventSpell","unlock_mana","manaUnlocked","chargers","lessThan","unlock_spell1","upgrade_discharge_1","dischargeUpgrade1","momentum","clearTimers","spell2","spell3","spell4","spell5","upgradeDischarge","dischargeUpgrades","examProgress","eq","newCharge","newValue","SpellDisplay","spells","GEvents","eventTimeRequirement","delta","eventID","greaterThan","eventTimeCounter","doubleEventCooldownRecovery","triggerEventChance","rng","setupEvent","ID","setupApples","setupPlanets","planets","extremeHighTemp","extremeLowTemp","gravityEarthPercentage","oxygenEarthPercentage","surfaceArea","toxicityLevel","waterSurfacePercentage","eventData","counts","includes","cleanupEvent","eventRNG","failExam1","lastEventResult","examFails","doubleLearningProgress","concludeEvent","exam1condition","eventVictories","passExam1","progressLearning","choosePlanetResults","chooseBasket","abc","result","knowledgePrestige","gainKnowledge","doubleKnowledgeGain","choosePlanet","chosen","values","planet","optimalPlanetOxygen","outcome","kgain","test_numbers","choices","test_hotdog","test_saveTheRest","t2_test_oxygen","t2_test_toxicity","t2_test_lowTemp","t2_test_highTemp","t2_test_gravity","t2_test_tankpercentage","empty_event","eventList","EVENT_RESULTS","HumanPrefix","ListedResource","hide","justifyContent","ListedResourceNumber","percent","PlanetDisplay","EventRow","clearEvent","toggleTools","tools","forceEvent","chosenEvent","backgroundColor","border","padding","ed","children","JSON","stringify","EventDiv","extra","id","extraEventText","fontWeight","gap","ec","key","specialButton","PopUpDiv","buttonText","KnowledgeUpgrades","upgradeDeltaX","resetLearning","resetEventProgress","quadrupleXGain","have","doubleXGain","doubleXgain","trippleXGain","tripleXgain","squareXGain","squareXgain","quadrupleYGain","doubleYGain","doubleYgain","trippleYGain","tripleYgain","squareYGain","squareYgain","quadrupleZGain","doubleZGain","doubleZgain","trippleZGain","tripleZgain","squareZGain","squareZgain","skipExam1","dischargeUpgrade","plusDeltaXSpellPowerUpgrade","edata","basePrestigePoints","usedPrestigePoints","prestigeData","forEach","pu","PrestigeDiv","prestiges","each","unlockPrestigeUpgradeFormula","knowledgeUpgrades","prestigePoints","slice","ppu","NavColumn","discharge","energyModule","dischargeValue","seeEventBox","create_energy_DEC","create_dx_fromY","create_energizer_DEC","create_charger_DEC","create_dx_fromZ","create_momentum_DEC","ResourceColumn","memory","deltaX","deltaY","MainContainer","App","setNotify","extraLoad","start","Boolean","hostname","match","newDefaultMap","Date","now","dxfromy","dxfromz","energizers","EnergyModule","newZ","clearCharge","energy_base","charge_mult","momentum_mult","FirstCommands","t2Prestige","cheating","t1Prestige","ActiveMemory","mainDelta","delta_in_seconds","newY","maxDelta","ENGINE","processDelta","import","basedstr","combstr","atob","oldobj","parse","_","merge","checkSet","export","dataString","based","btoa","filename","text","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","console","loop","setInterval","tick","stop","clearTimeout","stringy","localStorage","setItem","quietLoad","getItem","newnow","newnotify","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3813b7e2.chunk.js","sourcesContent":["export const flexRow: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: 'row',\n}\n\nexport const flexColumn: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: 'column',\n}\n\nexport const spaceBetween: React.CSSProperties = {\n    justifyContent: \"space-between\",\n}\n\nexport const USERCOLOR = '#87d441'\n\nexport const PrestigeUpgradeHave: React.CSSProperties = {\n    color: USERCOLOR\n}\n","export function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}   \n\nexport function formatNumber(num:number): string {\n    if (Math.abs(num) < 1e6) return num.toString();\n    else return num.toExponential(2);\n}\nexport function percentOf (num: number, base: number) {\n    if (num === 0 || base === 0) return '-';\n    else return Math.floor(100*num/base).toString() + '%';\n}\n\nexport function msToFullHMS (msTime: number) {\n    \n    let hour = Math.floor(msTime/HOUR_MS).toString();\n\n    let minute = Math.floor((msTime%HOUR_MS)/HOUR_MS * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n\n    let second = Math.floor((msTime%MINUTE_MS)/MINUTE_MS * 60).toString();\n    if (second.length === 1) second = '0' + second;\n    \n    \n    return `${hour}:${minute}:${second}`\n}\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = SECOND_MS * 60\nexport const HOUR_MS = MINUTE_MS * 60\n\nexport const WORLD_POP = 7.7e9\n\nexport const AUTOSAVE_INTERVAL = MINUTE_MS * 1\n\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nexport var compressString = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = '';\n    var currentCount = 0;\n    var charsIndex = 0;\n    for (var i = 0; i < chars.length; i++) {\n        \n        if (currentCount = 0) {\n            currentLetter = chars[i]\n            charsIndex++\n        } else {\n            \n            if (chars[i] === currentLetter) {\n                currentCount ++;\n            } else {\n                if (currentCount > 1) {\n                    chars[charsIndex] = currentCount.toString();\n                    charsIndex++\n                } \n                currentCount = 1\n                currentLetter = chars[i]\n                charsIndex++\n                \n            }\n        \n        }\n            \n    }\n    return charsIndex + 1\n};\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = chars[0];\n    var currentCount = 1;\n    var charsIndex = 0;\n    for (var i = 1; i < chars.length; i++) {\n        \n        if (chars[i] === currentLetter) {\n            currentCount ++;\n        } else {\n            \n            chars[charsIndex] = currentLetter\n            charsIndex++\n            \n            \n            if (currentCount > 1) {\n                var intStr = currentCount.toString();\n                for (var j = 0; j < intStr.length; j++) {\n                    chars[charsIndex] = intStr[i];\n                    charsIndex++                \n                }\n            } \n            currentCount = 1\n            currentLetter = chars[i]\n        }\n            \n    }\n    \n    chars[charsIndex] = currentLetter\n    charsIndex++        \n            \n    if (currentCount > 1) {\n        chars[charsIndex] = currentCount.toString();\n        charsIndex++\n    } \n    \n    return charsIndex\n};\n\ninterface LNode {\n    next: LNode | null;\n    val: number;\n}\nfunction ListNode(val: number): LNode {\n    return {\n        val, next: null\n    }\n}\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1: LNode | null, l2: LNode | null) {\n    var s1 = \"\";\n    var s2 = \"\";\n    \n    while(l1 !== null) {\n        s1 = s1 + l1.val.toString();\n        l1 = l1.next\n    }\n    \n    while(l2 !== null) {\n        s2 = s2 + l2.val.toString();\n        l2 = l2.next\n    }\n    \n    s1 = s1.split(\"\").reverse().join()\n    s2 = s2.split(\"\").reverse().join()\n    \n    var newVal = parseInt(s1) + parseInt(s2);\n    var newS = newVal.toString();\n    var newSSplit = newS.split(\"\");\n    \n    var popped = newSSplit.pop();\n        \n    var currentNode = null;\n    while (popped !== undefined) {\n        var newNode = ListNode(parseInt(popped))\n        newNode.next = currentNode;\n        currentNode = newNode;\n        popped = newSSplit.pop()\n    }\n    \n    return currentNode\n    \n    \n    \n    \n};\n\nexport function canCheat () {\n    return  window.location.href === 'http://localhost:3000/'\n}","import React from \"react\";\nimport { Datamap } from \"../../engine/Datamap\";\nimport Decimal_ExpoCommand, { expoCommand_Able, expoCommand_Cost, expoCommand_maxAmmount, expoCommand_buy, expoCommand_buyMax } from \"../../engine/decimalInterfaces/Decimal_ExpoCommand\";\nimport { BasicCommand, CommandGodDamn } from \"../../engine/types/BasicCommand\";\nimport DisplayDecimal from \"./DisplayDecimal\";\n\n\ninterface ExpoButtonProps {\n  command: CommandGodDamn,\n}\n\nconst CommandGDButton: React.FC<ExpoButtonProps> = (props) => {\n\n  const command = props.command\n  if (command.hidden()) return null;\n\n  return (\n    <div>\n        <button disabled={!command.able()} onClick={command.command} >\n          {command.label} <br/>\n          {command.description()}\n        </button>\n    </div >\n  )\n}\nexport default CommandGDButton;\n","import React, { ReactNode } from 'react';\nimport './CommandButtonFC.css'\nimport { CommandGodDamn } from '../../engine/types/BasicCommand';\nimport CommandGDButton from './CommandGDButton';\nimport { flexRow, spaceBetween } from '../../CSSStyles';\n\nexport interface CCBProps {\n  command: CommandGodDamn;\n  warning: string\n}\n\nexport default class ConfirmCommandButton extends React.Component<CCBProps, {open:boolean}>{ \n\n  constructor(props:CCBProps) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  fakeBuy = (ev: React.MouseEvent) => {\n    if (ev.shiftKey) {\n      this.context.submitCommand(this.props.command.command)\n    } else this.setState({open:!this.state.open})\n    \n  }\n\n  render () {\n    const props = this.props;\n    const command = props.command\n    if (command.hidden()) return null;\n\n    return (<span>\n        <span className='FakeButton'>\n        <button className='DCommandFC' disabled={!command.able()} onClick={this.fakeBuy}>\n          {command.label} <br/>\n          {command.description()}\n        </button>\n        </span>\n        <div className='WarningBox' hidden={!this.state.open}>\n            <div className='WarningOverlay' onClick={this.fakeBuy}>\n              <div className='WarningPopup'>\n                {this.props.warning}\n                <div style={flexRow}>\n                <CommandGDButton command={command}/>\n                <button className='PlainD' onClick={this.fakeBuy}>\n                  Cancel\n                </button>\n                </div>\n              </div>\n            </div>\n        </div>\n    </span>)\n  }\n}\n\n\n","import React, { ReactNode } from 'react';\nimport './TipFC.scss'\nimport ReactDOM from 'react-dom';\n\nconst TipFC: React.FC<{ tip?: ReactNode }> = (props) => {\n  \n  return (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC'>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )\n\n}\n\nexport class classTipFC extends React.Component<{ tip: ReactNode }, {top: string|number, bottom: string|number}>{\n\n  constructor(props: Readonly<{ tip: React.ReactNode; }>) {\n    super(props)\n    this.state = {\n      top: \"\",\n      bottom: \"\"\n    }\n  }\n\n\n  componentDidMount () {\n    this.setTB();\n  }\n  \n\n  componentDidUpdate() {\n    this.setTB();\n  }\n\n  setTB= ()=>{\n\n    let height = window.innerHeight;\n\n    let top: number | string = \"\"\n    let bottom: number | string = \"\"\n\n    let myDom = ReactDOM.findDOMNode(this);\n\n    if (myDom) {\n\n\n      let parent = ((ReactDOM.findDOMNode(this) as Element).parentElement as Element)\n\n      if (parent) {\n\n        parent = parent as Element;\n        let parentBounds = parent.getBoundingClientRect()\n\n        /*\n        if (parentBounds.right > width / 2) {\n          right = width - parentBounds.right;\n          left = \"\"\n        } else {\n          right = \"\"\n          left = parentBounds.left\n        }*/\n\n        if (parentBounds.bottom > height / 2) {\n          bottom = height - parentBounds.top;\n          top = \"\"\n        } else {\n          bottom = \"\";\n          top = parentBounds.bottom;\n        }\n\n        this.setState({top, bottom});\n      }\n    }\n\n  }\n\n  render() {\n    let props = this.props;\n\n    //let width = window.innerWidth;\n\n    //let left: number | string = \"\"\n    //let right: number | string = \"\"\n    \n\n    \n\n    return (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC' style={{top:this.state.top, bottom:this.state.bottom}}>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default TipFC;\n\n","import React from 'react';\nimport { flexRow } from '../../CSSStyles';\nimport { Datamap } from '../../engine/Datamap';\nimport Engine from '../../engine/Engine';\nimport { AUTOSAVE_INTERVAL, canCheat } from '../../engine/externalfns/util';\nimport ConfirmCommandButton from '../comps/ConfirmCommandButton';\nimport TipFC from '../comps/TipFC';\n\n\ninterface CompProps {engine:Engine, data:Datamap};\nclass HeaderRow extends React.Component<CompProps, {}> {\n\n  render() {\n\n    \n    let engine = this.props.engine;\n    let data = this.props.data;\n    //let bg = background: \n    //picture no-repeat left top,picture no-repeat right center,picture repeat-x center bottom\n    return (\n      <div className='HeaderRow'>\n      <div style={flexRow}>\n      <span className='Tuser' style={{marginRight:'10px'}}>\n        SomethingToCareAbout\n      </span>\n        <button onClick={engine.save} onContextMenu={(event)=>{\n          engine.autosaveToggle()\n          event.preventDefault();\n        }}>\n          {getSaveText(data)}\n          <TipFC tip={<span>\n            {`Right click to toggle autosave ${data.autosave?'(ON)':'(OFF)'}`}<br/>\n            The game will still save at certain times regardless.\n          </span>\n            } />\n        </button>\n\n      </div>\n      <div style={flexRow} className='RightHeaderRow'>\n        <button onClick={engine.load}>\n          LOAD\n        </button>\n        <span className='badButton'>\n        <ConfirmCommandButton\n        warning='There is no benifit. Just resets your data.'\n        command={{\n          able: ()=>true,\n          command: engine.reset,\n          hidden: ()=>false,\n          description: ()=>\"\",\n          label: 'RESET YOUR SAVE FILE'\n        }}\n        />\n        </span>\n        {canCheat() &&\n        <button onClick={engine.firstCommands.toggleCheating}>\n          TURBO\n        </button>}\n      </div>\n      </div>\n        \n    );\n  }\n}\n\nexport default HeaderRow;\n\nexport function getSaveText (data:Datamap) {\n  if (data.autosave) {\n    return (\n\n      <span>\n      <span className={data.autosaveCounter/AUTOSAVE_INTERVAL > .2?'Tuser':'Ttext'}>S</span>\n      <span className={data.autosaveCounter/AUTOSAVE_INTERVAL > .4?'Tuser':'Ttext'}>A</span>\n      <span className={data.autosaveCounter/AUTOSAVE_INTERVAL > .6?'Tuser':'Ttext'}>V</span>\n      <span className={data.autosaveCounter/AUTOSAVE_INTERVAL > .8?'Tuser':'Ttext'}>E</span>\n    </span>\n      )\n  } else return (<span>SAVE</span>)\n}","import React from \"react\";\nimport { Datamap } from \"../../engine/Datamap\";\nimport Decimal_ExpoCommand, { expoCommand_Able, expoCommand_Cost, expoCommand_maxAmmount, expoCommand_buy, expoCommand_buyMax } from \"../../engine/decimalInterfaces/Decimal_ExpoCommand\";\nimport { BasicCommand } from \"../../engine/types/BasicCommand\";\nimport DisplayDecimal from \"./DisplayDecimal\";\n\n\ninterface ExpoButtonProps {\n  command: BasicCommand,\n}\n\nconst CommandButton: React.FC<ExpoButtonProps> = (props) => {\n\n  const command = props.command\n\n  return (\n    <div hidden={command.hidden ? command.hidden : false}>\n        <button onClick={command.command} >\n          {command.label} <br/>\n          {command.description}\n        </button>\n    </div >\n  )\n}\nexport default CommandButton;\n","import Decimal, { DecimalSource } from \"break_infinity.js\";\n\nexport default interface ExpoCurve {\n    coefficient: number,\n    initial: DecimalSource,\n}\n\nexport function expoI_getCost(expo: ExpoCurve, owned:Decimal) {\n\n    \n    return Decimal.floor(Decimal.mul(expo.initial, Decimal.pow(expo.coefficient, owned)))\n\n    //Math.floor(expo.initial*Math.pow(expo.coefficient,owned))\n}\n\nexport function expoI_maxBuyAmount (expo: ExpoCurve, owned:Decimal, currency: Decimal) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n    let c = currency\n\n    let dlogresult = Decimal.log(Decimal.add(1, Decimal.div(Decimal.mul(c,(r-1)),Decimal.mul(b,Decimal.pow(r, k)))) ,r)\n    //let logresult = Math.log(1+((c*(r - 1))/(b*Math.pow(r, k))))\n    //let logchange = logresult / Math.log(r);\n    let result = Decimal.floor(dlogresult)\n\n    return result;\n}  \n\nexport function expoI_maxBuyCost (expo: ExpoCurve, owned:Decimal, currency: Decimal) {\n\n    let n = expoI_maxBuyAmount(expo, owned, currency);\n    \n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport function expoI_buyNCost (expo: ExpoCurve, owned: Decimal, n: Decimal) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n    \n    let dec_result = Decimal.mul(b, Decimal.div(Decimal.mul(Decimal.pow(r,k),Decimal.pow(r,n).minus(1)),(r-1)) )\n    //let old = Math.floor( b * (Math.pow(r,k)*(Math.pow(r,n)-1)) / (r - 1) )\n\n    return Decimal.floor(dec_result)\n}\n\n/* No mod in decimal!!\nexport function expoI_buyNextCost (expo: ExpoCurve, owned: Decimal, next: number) {\n    let k = owned;\n    let deci_n = next.minus(Decimal.mo)\n    //let n = next - k % next;\n\n    return expoI_buyNCost(expo, owned, n)\n}*/\n\nexport interface ExpoObject {\n    [key:string]:ExpoCurve,\n}","import ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_buyNCost } from \"./ExpoCurve\";\n\n\nimport { Datamap } from \"../Datamap\";\nimport Decimal, { DecimalSource } from \"break_infinity.js\";\n\n\n\nexport default interface Decimal_ExpoCommand {\n    expo: ExpoCurve,\n    countFns: CountFns;\n    currencyFns: CurrencyFns;\n    \n    //command: DecoupledCommand2,\n    name: string;\n\n\n    hidden: (data: Datamap) => boolean;\n    change?: string;\n    img?: string;\n    tip?: string;\n}\n\nexport interface CountFns {\n    get: (data: Datamap) => Decimal;\n    gain: (data: Datamap, ammount: DecimalSource) => void;\n}\n\nexport interface CurrencyFns {\n    get: (data: Datamap) => Decimal;\n    spend: (data: Datamap, ammount: Decimal) => void;\n    name: string;\n}\n\nexport function expoCommand_buy(data: Datamap, expoCommand: Decimal_ExpoCommand) {\n    //console.log(data, expoCommand);\n    \n    if (expoCommand_Able(data, expoCommand) === false) {\n        //console.log('unable');\n        //let have = expoCommand.currencyFns.get(data);\n        //let cost = expoCommand_Cost(data, expoCommand);\n        //console.log(have, cost);\n        \n        return; }\n    else {\n        //console.log('able');\n        expoCommand.currencyFns.spend(data, expoCommand_Cost(data, expoCommand));\n        expoCommand.countFns.gain(data, 1);\n    }\n}\n\nexport function expoCommand_Cost(data: Datamap, expoCommand: Decimal_ExpoCommand) {\n    return expoI_getCost(expoCommand.expo, expoCommand.countFns.get(data))\n}\n\nexport function expoCommand_Able(data: Datamap, ep: Decimal_ExpoCommand) {\n    return expoCommand_Cost(data, ep).lessThanOrEqualTo(ep.currencyFns.get(data));\n}\n\nexport function expoCommand_maxAmmount(data: Datamap, ep: Decimal_ExpoCommand) {\n    return expoI_maxBuyAmount(ep.expo, ep.countFns.get(data), ep.currencyFns.get(data));\n}\nexport function expoCommand_maxCost(data: Datamap, ep: Decimal_ExpoCommand) {\n    let ammount = expoCommand_maxAmmount(data, ep);\n    return expoI_buyNCost(ep.expo, ep.countFns.get(data), ammount);\n}\n\nexport function expoCommand_buyMax(data: Datamap, ep: Decimal_ExpoCommand) {\n    let ammount = expoCommand_maxAmmount(data,ep);\n    let cost = expoCommand_maxCost(data,ep)\n\n        if (ep.currencyFns.get(data).greaterThanOrEqualTo(cost)) {\n            ep.currencyFns.spend(data, cost );\n            ep.countFns.gain(data, ammount);\n        }\n}\n\n","import Decimal from 'break_infinity.js';\r\nimport { __extends } from 'tslib';\r\n\r\nvar Settings = {\r\n  isInfinite: function isInfinite(decimal) {\r\n    return decimal.gte(Decimal.MAX_VALUE);\r\n  },\r\n  exponentCommas: {\r\n    show: true,\r\n    min: 100000,\r\n    max: 1000000000\r\n  }\r\n};\r\n\r\nvar commaRegexp = /\\B(?=([0-9]{3})+(?![0-9]))/g;\r\nfunction formatWithCommas(value) {\r\n  var decimalPointSplit = value.toString().split(\".\");\r\n  decimalPointSplit[0] = decimalPointSplit[0].replace(commaRegexp, \",\");\r\n  return decimalPointSplit.join(\".\");\r\n}\r\nfunction fixMantissaOverflow(value, places, threshold, powerOffset) {\r\n  var pow10 = Math.pow(10, places);\r\n  var isOverflowing = Math.round(value.mantissa * pow10) >= threshold * pow10;\r\n\r\n  if (isOverflowing) {\r\n    return Decimal.fromMantissaExponent_noNormalize(1, value.exponent + powerOffset);\r\n  }\r\n\r\n  return value;\r\n}\r\nfunction toEngineering(value) {\r\n  var exponentOffset = value.exponent % 3;\r\n  return Decimal.fromMantissaExponent_noNormalize(value.mantissa * Math.pow(10, exponentOffset), value.exponent - exponentOffset);\r\n}\r\nfunction toFixedEngineering(value, places) {\r\n  return fixMantissaOverflow(toEngineering(value), places, 1000, 3);\r\n}\r\n\r\nvar Notation = function () {\r\n  function Notation() {}\r\n\r\n  Notation.prototype.format = function (value, places, placesUnder1000) {\r\n    if (places === void 0) {\r\n      places = 0;\r\n    }\r\n\r\n    if (placesUnder1000 === void 0) {\r\n      placesUnder1000 = 0;\r\n    }\r\n\r\n    if (typeof value === \"number\" && !Number.isFinite(value)) {\r\n      return this.infinite;\r\n    }\r\n\r\n    var decimal = Decimal.fromValue_noAlloc(value);\r\n\r\n    if (decimal.exponent < -300) {\r\n      return decimal.sign() < 0 ? this.formatVerySmallNegativeDecimal(decimal.abs(), placesUnder1000) : this.formatVerySmallDecimal(decimal, placesUnder1000);\r\n    }\r\n\r\n    if (decimal.exponent < 3) {\r\n      var number = decimal.toNumber();\r\n      return number < 0 ? this.formatNegativeUnder1000(Math.abs(number), placesUnder1000) : this.formatUnder1000(number, placesUnder1000);\r\n    }\r\n\r\n    if (Settings.isInfinite(decimal.abs())) {\r\n      return decimal.sign() < 0 ? this.negativeInfinite : this.infinite;\r\n    }\r\n\r\n    return decimal.sign() < 0 ? this.formatNegativeDecimal(decimal.abs(), places) : this.formatDecimal(decimal, places);\r\n  };\r\n\r\n  Object.defineProperty(Notation.prototype, \"negativeInfinite\", {\r\n    get: function get() {\r\n      return \"-\" + this.infinite;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(Notation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \"Infinite\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  Notation.prototype.formatVerySmallNegativeDecimal = function (value, places) {\r\n    return \"-\" + this.formatVerySmallDecimal(value, places);\r\n  };\r\n\r\n  Notation.prototype.formatVerySmallDecimal = function (value, places) {\r\n    return this.formatUnder1000(value.toNumber(), places);\r\n  };\r\n\r\n  Notation.prototype.formatNegativeUnder1000 = function (value, places) {\r\n    return \"-\" + this.formatUnder1000(value, places);\r\n  };\r\n\r\n  Notation.prototype.formatUnder1000 = function (value, places) {\r\n    return value.toFixed(places);\r\n  };\r\n\r\n  Notation.prototype.formatNegativeDecimal = function (value, places) {\r\n    return \"-\" + this.formatDecimal(value, places);\r\n  };\r\n\r\n  Notation.prototype.formatExponent = function (exponent) {\r\n    if (this.noSpecialFormatting(exponent)) {\r\n      return exponent.toString();\r\n    }\r\n\r\n    if (this.showCommas(exponent)) {\r\n      return formatWithCommas(exponent);\r\n    }\r\n\r\n    return this.formatDecimal(new Decimal(exponent), 3);\r\n  };\r\n\r\n  Notation.prototype.noSpecialFormatting = function (exponent) {\r\n    return exponent < Settings.exponentCommas.min;\r\n  };\r\n\r\n  Notation.prototype.showCommas = function (exponent) {\r\n    return Settings.exponentCommas.show && exponent < Settings.exponentCommas.max;\r\n  };\r\n\r\n  return Notation;\r\n}();\r\n\r\nvar ScientificNotation = function (_super) {\r\n  __extends(ScientificNotation, _super);\r\n\r\n  function ScientificNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(ScientificNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Scientific\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  ScientificNotation.prototype.formatDecimal = function (value, places) {\r\n    var fixedValue = fixMantissaOverflow(value, places, 10, 1);\r\n    var mantissa = fixedValue.mantissa.toFixed(places);\r\n    var exponent = this.formatExponent(fixedValue.exponent);\r\n    return mantissa + \"e\" + exponent;\r\n  };\r\n\r\n  return ScientificNotation;\r\n}(Notation);\r\n\r\nvar EngineeringNotation = function (_super) {\r\n  __extends(EngineeringNotation, _super);\r\n\r\n  function EngineeringNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(EngineeringNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Engineering\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  EngineeringNotation.prototype.formatDecimal = function (value, places) {\r\n    var engineering = toFixedEngineering(value, places);\r\n    var mantissa = engineering.mantissa.toFixed(places);\r\n    var exponent = this.formatExponent(engineering.exponent);\r\n    return mantissa + \"e\" + exponent;\r\n  };\r\n\r\n  return EngineeringNotation;\r\n}(Notation);\r\n\r\nvar CustomNotation = function (_super) {\r\n  __extends(CustomNotation, _super);\r\n\r\n  function CustomNotation(letters, mantissaExponentSeparator, separator) {\r\n    if (mantissaExponentSeparator === void 0) {\r\n      mantissaExponentSeparator = \"\";\r\n    }\r\n\r\n    if (separator === void 0) {\r\n      separator = \"\";\r\n    }\r\n\r\n    var _this = this;\r\n\r\n    if (letters.length < 2) {\r\n      throw new Error(\"The supplied letter sequence must contain at least 2 letters\");\r\n    }\r\n\r\n    _this = _super.call(this) || this;\r\n    _this.letters = letters;\r\n    _this.mantissaExponentSeparator = mantissaExponentSeparator;\r\n    _this.separator = separator;\r\n    return _this;\r\n  }\r\n\r\n  Object.defineProperty(CustomNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Custom\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  CustomNotation.prototype.formatDecimal = function (value, places) {\r\n    var engineering = toEngineering(value);\r\n    var mantissa = engineering.mantissa.toFixed(places);\r\n    return mantissa + this.mantissaExponentSeparator + this.transcribe(engineering.exponent).join(this.separator);\r\n  };\r\n\r\n  CustomNotation.prototype.transcribe = function (exponent) {\r\n    var normalizedExponent = exponent / 3;\r\n    var base = this.letters.length;\r\n\r\n    if (normalizedExponent <= base) {\r\n      return [this.letters[normalizedExponent - 1]];\r\n    }\r\n\r\n    var letters = [];\r\n\r\n    while (normalizedExponent > base) {\r\n      var remainder = normalizedExponent % base;\r\n      var letterIndex = (remainder === 0 ? base : remainder) - 1;\r\n      letters.push(this.letters[letterIndex]);\r\n      normalizedExponent = (normalizedExponent - remainder) / base;\r\n\r\n      if (remainder === 0) {\r\n        normalizedExponent--;\r\n      }\r\n    }\r\n\r\n    letters.push(this.letters[normalizedExponent - 1]);\r\n    return letters.reverse();\r\n  };\r\n\r\n  return CustomNotation;\r\n}(EngineeringNotation);\r\n\r\nvar LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\nvar LettersNotation = function (_super) {\r\n  __extends(LettersNotation, _super);\r\n\r\n  function LettersNotation() {\r\n    return _super.call(this, LETTERS) || this;\r\n  }\r\n\r\n  Object.defineProperty(LettersNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Letters\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  return LettersNotation;\r\n}(CustomNotation);\r\n\r\nvar CANCER = [\"😠\", \"🎂\", \"🎄\", \"💀\", \"🍆\", \"👪\", \"🌈\", \"💯\", \"🍦\", \"🎃\", \"💋\", \"😂\", \"🌙\", \"⛔\", \"🐙\", \"💩\", \"❓\", \"☢\", \"🙈\", \"👍\", \"☂\", \"✌\", \"⚠\", \"❌\", \"😋\", \"⚡\"];\r\n\r\nvar CancerNotation = function (_super) {\r\n  __extends(CancerNotation, _super);\r\n\r\n  function CancerNotation() {\r\n    return _super.call(this, CANCER) || this;\r\n  }\r\n\r\n  Object.defineProperty(CancerNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Cancer\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  return CancerNotation;\r\n}(CustomNotation);\r\n\r\nvar ABBREVIATIONS = [\"\", \"K\", \"M\", \"B\", \"T\", \"Qa\", \"Qt\", \"Sx\", \"Sp\", \"Oc\", \"No\", \"Dc\", \"UDc\", \"DDc\", \"TDc\", \"QaDc\", \"QtDc\", \"SxDc\", \"SpDc\", \"ODc\", \"NDc\", \"Vg\", \"UVg\", \"DVg\", \"TVg\", \"QaVg\", \"QtVg\", \"SxVg\", \"SpVg\", \"OVg\", \"NVg\", \"Tg\", \"UTg\", \"DTg\", \"TTg\", \"QaTg\", \"QtTg\", \"SxTg\", \"SpTg\", \"OTg\", \"NTg\", \"Qd\", \"UQd\", \"DQd\", \"TQd\", \"QaQd\", \"QtQd\", \"SxQd\", \"SpQd\", \"OQd\", \"NQd\", \"Qi\", \"UQi\", \"DQi\", \"TQi\", \"QaQi\", \"QtQi\", \"SxQi\", \"SpQi\", \"OQi\", \"NQi\", \"Se\", \"USe\", \"DSe\", \"TSe\", \"QaSe\", \"QtSe\", \"SxSe\", \"SpSe\", \"OSe\", \"NSe\", \"St\", \"USt\", \"DSt\", \"TSt\", \"QaSt\", \"QtSt\", \"SxSt\", \"SpSt\", \"OSt\", \"NSt\", \"Og\", \"UOg\", \"DOg\", \"TOg\", \"QaOg\", \"QtOg\", \"SxOg\", \"SpOg\", \"OOg\", \"NOg\", \"Nn\", \"UNn\", \"DNn\", \"TNn\", \"QaNn\", \"QtNn\", \"SxNn\", \"SpNn\", \"ONn\", \"NNn\", \"Ce\"];\r\nvar PREFIXES = [[\"\", \"U\", \"D\", \"T\", \"Qa\", \"Qt\", \"Sx\", \"Sp\", \"O\", \"N\"], [\"\", \"Dc\", \"Vg\", \"Tg\", \"Qd\", \"Qi\", \"Se\", \"St\", \"Og\", \"Nn\"], [\"\", \"Ce\", \"Dn\", \"Tc\", \"Qe\", \"Qu\", \"Sc\", \"Si\", \"Oe\", \"Ne\"]];\r\nvar PREFIXES_2 = [\"\", \"MI-\", \"MC-\", \"NA-\", \"PC-\", \"FM-\"];\r\n\r\nvar StandardNotation = function (_super) {\r\n  __extends(StandardNotation, _super);\r\n\r\n  function StandardNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(StandardNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Standard\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  StandardNotation.prototype.formatDecimal = function (value, places) {\r\n    var engineering = toFixedEngineering(value, places);\r\n    var mantissa = engineering.mantissa.toFixed(places);\r\n    var abbreviation = engineering.exponent <= 303 ? ABBREVIATIONS[engineering.exponent / 3] : this.abbreviate(engineering.exponent);\r\n    return mantissa + \" \" + abbreviation;\r\n  };\r\n\r\n  StandardNotation.prototype.abbreviate = function (e) {\r\n    e = Math.floor(e / 3) - 1;\r\n    var index2 = 0;\r\n    var prefix = [PREFIXES[0][e % 10]];\r\n\r\n    while (e >= 10) {\r\n      e = Math.floor(e / 10);\r\n      prefix.push(PREFIXES[++index2 % 3][e % 10]);\r\n    }\r\n\r\n    index2 = Math.floor(index2 / 3);\r\n\r\n    while (prefix.length % 3 !== 0) {\r\n      prefix.push(\"\");\r\n    }\r\n\r\n    var abbreviation = \"\";\r\n\r\n    while (index2 >= 0) {\r\n      abbreviation += prefix[index2 * 3] + prefix[index2 * 3 + 1] + prefix[index2 * 3 + 2] + PREFIXES_2[index2--];\r\n    }\r\n\r\n    abbreviation = abbreviation.replace(/-$/, \"\");\r\n    return abbreviation.replace(\"UM\", \"M\").replace(\"UNA\", \"NA\").replace(\"UPC\", \"PC\").replace(\"UFM\", \"FM\");\r\n  };\r\n\r\n  return StandardNotation;\r\n}(EngineeringNotation);\r\n\r\nvar standard = new StandardNotation();\r\n\r\nvar MixedScientificNotation = function (_super) {\r\n  __extends(MixedScientificNotation, _super);\r\n\r\n  function MixedScientificNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(MixedScientificNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Mixed scientific\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  MixedScientificNotation.prototype.formatDecimal = function (value, places) {\r\n    if (value.exponent < 33) {\r\n      return standard.formatDecimal(value, places);\r\n    }\r\n\r\n    var fixedValue = fixMantissaOverflow(value, places, 10, 1);\r\n    var mantissa = fixedValue.mantissa.toFixed(places);\r\n    var exponent = this.formatExponent(fixedValue.exponent);\r\n    return mantissa + \"e\" + exponent;\r\n  };\r\n\r\n  return MixedScientificNotation;\r\n}(Notation);\r\n\r\nvar standard$1 = new StandardNotation();\r\n\r\nvar MixedEngineeringNotation = function (_super) {\r\n  __extends(MixedEngineeringNotation, _super);\r\n\r\n  function MixedEngineeringNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(MixedEngineeringNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Mixed engineering\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  MixedEngineeringNotation.prototype.formatDecimal = function (value, places) {\r\n    if (value.exponent < 33) {\r\n      return standard$1.formatDecimal(value, places);\r\n    }\r\n\r\n    var engineering = toFixedEngineering(value, places);\r\n    var mantissa = engineering.mantissa.toFixed(places);\r\n    var exponent = this.formatExponent(engineering.exponent);\r\n    return mantissa + \"e\" + exponent;\r\n  };\r\n\r\n  return MixedEngineeringNotation;\r\n}(Notation);\r\n\r\nvar LogarithmNotation = function (_super) {\r\n  __extends(LogarithmNotation, _super);\r\n\r\n  function LogarithmNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(LogarithmNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Logarithm\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  LogarithmNotation.prototype.formatDecimal = function (value, places) {\r\n    var log10 = value.log10();\r\n\r\n    if (value.exponent < 100000) {\r\n      return \"e\" + log10.toFixed(Math.max(places, 1));\r\n    }\r\n\r\n    if (this.showCommas(value.exponent)) {\r\n      return \"e\" + formatWithCommas(log10.toFixed(places));\r\n    }\r\n\r\n    return \"ee\" + Math.log10(log10).toFixed(3);\r\n  };\r\n\r\n  return LogarithmNotation;\r\n}(Notation);\r\n\r\nvar BracketsNotation = function (_super) {\r\n  __extends(BracketsNotation, _super);\r\n\r\n  function BracketsNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(BracketsNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Brackets\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  BracketsNotation.prototype.formatDecimal = function (value) {\r\n    var table = [\")\", \"[\", \"{\", \"]\", \"(\", \"}\"];\r\n    var log6 = Math.LN10 / Math.log(6) * value.log10();\r\n    var wholePartOfLog = Math.floor(log6);\r\n    var decimalPartOfLog = log6 - wholePartOfLog;\r\n    var decimalPartTimes36 = Math.floor(decimalPartOfLog * 36);\r\n    var string = \"\";\r\n\r\n    while (wholePartOfLog >= 6) {\r\n      var remainder = wholePartOfLog % 6;\r\n      wholePartOfLog -= remainder;\r\n      wholePartOfLog /= 6;\r\n      string = table[remainder] + string;\r\n    }\r\n\r\n    string = \"e\" + table[wholePartOfLog] + string + \".\";\r\n    string += table[Math.floor(decimalPartTimes36 / 6)];\r\n    string += table[decimalPartTimes36 % 6];\r\n    return string;\r\n  };\r\n\r\n  return BracketsNotation;\r\n}(Notation);\r\n\r\nvar LOG10_MAX_VALUE = Math.log10(Number.MAX_VALUE);\r\n\r\nvar InfinityNotation = function (_super) {\r\n  __extends(InfinityNotation, _super);\r\n\r\n  function InfinityNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(InfinityNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Infinity\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  InfinityNotation.prototype.formatDecimal = function (value, places) {\r\n    var log10 = value.log10();\r\n    var infinities = log10 / LOG10_MAX_VALUE;\r\n    var infPlaces = infinities < 1000 ? 4 : 3;\r\n    var formatted = infinities.toFixed(Math.max(infPlaces, places));\r\n\r\n    if (Settings.exponentCommas.show) {\r\n      return formatWithCommas(formatted) + \"\\u221E\";\r\n    }\r\n\r\n    return formatted + \"\\u221E\";\r\n  };\r\n\r\n  return InfinityNotation;\r\n}(Notation);\r\n\r\nvar ROMAN_NUMBERS = [[1000000, \"M̄\"], [900000, \"C̄M̄\"], [500000, \"D̄\"], [400000, \"C̄D̄\"], [100000, \"C̄\"], [90000, \"X̄C̄\"], [50000, \"L̄\"], [40000, \"X̄L̄\"], [10000, \"X̄\"], [9000, \"ⅯX̄\"], [5000, \"V̄\"], [4000, \"ⅯV̄\"], [1000, \"Ⅿ\"], [900, \"ⅭⅯ\"], [500, \"Ⅾ\"], [400, \"ⅭⅮ\"], [100, \"Ⅽ\"], [90, \"ⅩⅭ\"], [50, \"Ⅼ\"], [40, \"ⅩⅬ\"], [10, \"Ⅹ\"], [9, \"ⅠⅩ\"], [5, \"Ⅴ\"], [4, \"ⅠⅤ\"], [1, \"Ⅰ\"]];\r\nvar ROMAN_FRACTIONS = [\"\", \"·\", \":\", \"∴\", \"∷\", \"⁙\"];\r\nvar MAXIMUM = 4000000;\r\nvar MAX_LOG_10 = Math.log10(MAXIMUM);\r\n\r\nvar RomanNotation = function (_super) {\r\n  __extends(RomanNotation, _super);\r\n\r\n  function RomanNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(RomanNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Roman\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(RomanNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \"Infinitus\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  RomanNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.romanize(value);\r\n  };\r\n\r\n  RomanNotation.prototype.formatDecimal = function (value) {\r\n    if (value.lt(MAXIMUM)) {\r\n      return this.romanize(value.toNumber());\r\n    }\r\n\r\n    var log10 = value.log10();\r\n    var maximums = log10 / MAX_LOG_10;\r\n    var current = Math.pow(MAXIMUM, maximums - Math.floor(maximums));\r\n    return this.romanize(current) + \"\\u2191\" + this.formatDecimal(new Decimal(maximums));\r\n  };\r\n\r\n  RomanNotation.prototype.romanize = function (value) {\r\n    var romanized = \"\";\r\n\r\n    for (var _i = 0, ROMAN_NUMBERS_1 = ROMAN_NUMBERS; _i < ROMAN_NUMBERS_1.length; _i++) {\r\n      var numberPair = ROMAN_NUMBERS_1[_i];\r\n      var decimal = numberPair[0];\r\n      var roman = numberPair[1];\r\n\r\n      while (decimal <= value) {\r\n        romanized += roman;\r\n        value -= decimal;\r\n      }\r\n    }\r\n\r\n    var duodecimal = Math.round(Math.floor(value * 10) * 1.2);\r\n\r\n    if (duodecimal === 0) {\r\n      return romanized === \"\" ? \"nulla\" : romanized;\r\n    }\r\n\r\n    if (duodecimal > 5) {\r\n      duodecimal -= 6;\r\n      romanized += \"Ｓ\";\r\n    }\r\n\r\n    romanized += ROMAN_FRACTIONS[duodecimal];\r\n    return romanized;\r\n  };\r\n\r\n  return RomanNotation;\r\n}(Notation);\r\n\r\nvar DOT_DIGITS = \"⠀⠁⠂⠃⠄⠅⠆⠇⠈⠉⠊⠋⠌⠍⠎⠏⠐⠑⠒⠓⠔⠕⠖⠗⠘⠙⠚⠛⠜⠝⠞⠟⠠⠡⠢⠣⠤⠥⠦⠧⠨⠩⠪⠫⠬⠭⠮⠯⠰⠱⠲⠳⠴⠵⠶⠷⠸⠹⠺⠻⠼⠽⠾⠿\" + \"⡀⡁⡂⡃⡄⡅⡆⡇⡈⡉⡊⡋⡌⡍⡎⡏⡐⡑⡒⡓⡔⡕⡖⡗⡘⡙⡚⡛⡜⡝⡞⡟⡠⡡⡢⡣⡤⡥⡦⡧⡨⡩⡪⡫⡬⡭⡮⡯⡰⡱⡲⡳⡴⡵⡶⡷⡸⡹⡺⡻⡼⡽⡾⡿\" + \"⢀⢁⢂⢃⢄⢅⢆⢇⢈⢉⢊⢋⢌⢍⢎⢏⢐⢑⢒⢓⢔⢕⢖⢗⢘⢙⢚⢛⢜⢝⢞⢟⢠⢡⢢⢣⢤⢥⢦⢧⢨⢩⢪⢫⢬⢭⢮⢯⢰⢱⢲⢳⢴⢵⢶⢷⢸⢹⢺⢻⢼⢽⢾⢿\" + \"⣀⣁⣂⣃⣄⣅⣆⣇⣈⣉⣊⣋⣌⣍⣎⣏⣐⣑⣒⣓⣔⣕⣖⣗⣘⣙⣚⣛⣜⣝⣞⣟⣠⣡⣢⣣⣤⣥⣦⣧⣨⣩⣪⣫⣬⣭⣮⣯⣰⣱⣲⣳⣴⣵⣶⣷⣸⣹⣺⣻⣼⣽⣾⣿\";\r\n\r\nvar DotsNotation = function (_super) {\r\n  __extends(DotsNotation, _super);\r\n\r\n  function DotsNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(DotsNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Dots\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(DotsNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \"⣿⠀⣿\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  DotsNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.dotify(value * 254);\r\n  };\r\n\r\n  DotsNotation.prototype.formatDecimal = function (value) {\r\n    if (value.lt(16387063.9980315)) {\r\n      return this.dotify(value.toNumber() * 254);\r\n    }\r\n\r\n    var log = value.log(254);\r\n    var exponent = Math.floor(log - 2);\r\n    var mantissa = Math.pow(254, log - exponent);\r\n    return this.dotify(exponent) + \"\\u28FF\" + this.dotify(mantissa * 254);\r\n  };\r\n\r\n  DotsNotation.prototype.dotify = function (value, pad) {\r\n    if (pad === void 0) {\r\n      pad = false;\r\n    }\r\n\r\n    value = Math.round(value);\r\n\r\n    if (!pad && value < 254) {\r\n      return DOT_DIGITS[value + 1];\r\n    }\r\n\r\n    if (value < 64516) {\r\n      return DOT_DIGITS[Math.floor(value / 254) + 1] + DOT_DIGITS[value % 254 + 1];\r\n    }\r\n\r\n    return this.dotify(Math.floor(value / 64516)) + this.dotify(value % 64516, true);\r\n  };\r\n\r\n  return DotsNotation;\r\n}(Notation);\r\n\r\nvar ZALGO_CHARS = [\"\\u030D\", \"\\u0336\", \"\\u0353\", \"\\u033F\", \"\\u0489\", \"\\u0330\", \"\\u031A\", \"\\u0338\", \"\\u035A\", \"\\u0337\"];\r\nvar HE_COMES = [\"H\", \"E\", \" \", \"C\", \"O\", \"M\", \"E\", \"S\"];\r\n\r\nfunction randomElement(array) {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nvar ZalgoNotation = function (_super) {\r\n  __extends(ZalgoNotation, _super);\r\n\r\n  function ZalgoNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(ZalgoNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Zalgo\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(ZalgoNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return HE_COMES.map(function (_char) {\r\n        return _char + randomElement(ZALGO_CHARS);\r\n      }).join(\"\");\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  ZalgoNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.heComes(new Decimal(value));\r\n  };\r\n\r\n  ZalgoNotation.prototype.formatDecimal = function (value) {\r\n    return this.heComes(value);\r\n  };\r\n\r\n  ZalgoNotation.prototype.heComes = function (value) {\r\n    var scaled = value.plus(1).log10() / 66666 * 1000;\r\n    var displayPart = Number(scaled.toFixed(2));\r\n    var zalgoPart = Math.floor(Math.abs(Math.pow(2, 30) * (scaled - displayPart)));\r\n    var displayChars = Array.from(formatWithCommas(displayPart));\r\n    var zalgoIndices = Array.from(zalgoPart.toString() + scaled.toFixed(0));\r\n\r\n    for (var i = 0; i < zalgoIndices.length; i++) {\r\n      var zalgoIndex = parseInt(zalgoIndices[i], 10);\r\n      var displayIndex = 37 * i % displayChars.length;\r\n      displayChars[displayIndex] += ZALGO_CHARS[zalgoIndex];\r\n    }\r\n\r\n    return displayChars.join(\"\");\r\n  };\r\n\r\n  return ZalgoNotation;\r\n}(Notation);\r\n\r\nvar SIGNS = {\r\n  POSITIVE: 0,\r\n  NEGATIVE: 1\r\n};\r\n\r\nvar HexNotation = function (_super) {\r\n  __extends(HexNotation, _super);\r\n\r\n  function HexNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(HexNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Hex\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(HexNotation.prototype, \"negativeInfinite\", {\r\n    get: function get() {\r\n      return \"00000000\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(HexNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \"FFFFFFFF\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  HexNotation.prototype.formatVerySmallNegativeDecimal = function (value) {\r\n    return this.formatDecimal(value.negate());\r\n  };\r\n\r\n  HexNotation.prototype.formatVerySmallDecimal = function (value) {\r\n    return this.formatDecimal(value);\r\n  };\r\n\r\n  HexNotation.prototype.formatNegativeUnder1000 = function (value) {\r\n    return this.formatDecimal(new Decimal(-value));\r\n  };\r\n\r\n  HexNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.formatDecimal(new Decimal(value));\r\n  };\r\n\r\n  HexNotation.prototype.formatNegativeDecimal = function (value) {\r\n    return this.formatDecimal(value.negate());\r\n  };\r\n\r\n  HexNotation.prototype.formatDecimal = function (value) {\r\n    return this.rawValue(value, 32).toString(16).toUpperCase().padStart(8, \"0\");\r\n  };\r\n\r\n  HexNotation.prototype.modifiedLogarithm = function (x) {\r\n    var floorOfLog = Math.floor(Decimal.log2(x));\r\n    var previousPowerOfTwo = Decimal.pow(2, floorOfLog);\r\n    var fractionToNextPowerOfTwo = Decimal.div(x, previousPowerOfTwo).toNumber() - 1;\r\n    return floorOfLog + fractionToNextPowerOfTwo;\r\n  };\r\n\r\n  HexNotation.prototype.isFinite = function (x) {\r\n    if (typeof x === \"number\") {\r\n      return isFinite(x);\r\n    }\r\n\r\n    return isFinite(x.e) && isFinite(x.mantissa);\r\n  };\r\n\r\n  HexNotation.prototype.rawValue = function (inputValue, numberOfBits) {\r\n    var value = inputValue;\r\n    var signs = [];\r\n\r\n    for (var i = 0; i < numberOfBits; i++) {\r\n      if (!this.isFinite(value)) {\r\n        break;\r\n      }\r\n\r\n      if (Decimal.lt(value, 0)) {\r\n        signs.push(SIGNS.NEGATIVE);\r\n        value = -this.modifiedLogarithm(Decimal.times(value, -1));\r\n      } else {\r\n        signs.push(SIGNS.POSITIVE);\r\n        value = this.modifiedLogarithm(value);\r\n      }\r\n    }\r\n\r\n    var resultValue = parseInt(signs.map(function (x) {\r\n      return x === SIGNS.POSITIVE ? 1 : 0;\r\n    }).join(\"\").padEnd(numberOfBits, \"0\"), 2);\r\n\r\n    if (resultValue !== Math.pow(2, numberOfBits) - 1 && (value > 0 || value === 0 && resultValue % 2 === 1)) {\r\n      resultValue += 1;\r\n    }\r\n\r\n    return resultValue;\r\n  };\r\n\r\n  return HexNotation;\r\n}(Notation);\r\n\r\nvar VOLUME_UNITS = [[0, \"pL\", 0], [61611520, \"minim\", 0], [61611520 * 60, \"dram\", 1], [61611520 * 60 * 8, \"ounce\", 2], [61611520 * 60 * 8 * 4, \"gill\", 2], [61611520 * 60 * 8 * 4 * 2, \"cup\", 3], [61611520 * 60 * 8 * 4 * 2 * 2, \"pint\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2, \"quart\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4, \"gallon\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 4.5, \"pin\", 3], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 9, \"firkin\", 3], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 18, \"kilderkin\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 36, \"barrel\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 54, \"hogshead\", 5], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 72, \"puncheon\", 6], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 108, \"butt\", 7], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 216, \"tun\", 7]];\r\nvar MINIMS = VOLUME_UNITS[1];\r\nvar VOLUME_ADJECTIVES = [\"minute \", \"tiny \", \"petite \", \"small \", \"modest \", \"medium \", \"generous \", \"large \", \"great \", \"grand \", \"huge \", \"gigantic \", \"immense \", \"colossal \", \"vast \", \"galactic \", \"cosmic \", \"infinite \", \"eternal \"];\r\nvar VOWELS = new Set(\"aeiouAEIOU\");\r\nvar MAX_VOLUME = 10 * VOLUME_UNITS[VOLUME_UNITS.length - 1][0];\r\nvar LOG_MAX_VOLUME = Math.log10(MAX_VOLUME);\r\nvar REDUCE_RATIO = Math.log10(MAX_VOLUME / MINIMS[0]);\r\n\r\nvar ImperialNotation = function (_super) {\r\n  __extends(ImperialNotation, _super);\r\n\r\n  function ImperialNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(ImperialNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Imperial\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  ImperialNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.formatDecimal(new Decimal(value));\r\n  };\r\n\r\n  ImperialNotation.prototype.formatDecimal = function (value) {\r\n    if (value.lt(MAX_VOLUME)) {\r\n      return this.convertToVolume(value.toNumber(), VOLUME_ADJECTIVES[0]);\r\n    }\r\n\r\n    var logValue = value.log10() - LOG_MAX_VOLUME;\r\n    var adjectiveIndex = 1;\r\n\r\n    while (logValue > REDUCE_RATIO) {\r\n      adjectiveIndex++;\r\n      logValue /= REDUCE_RATIO;\r\n    }\r\n\r\n    return this.convertToVolume(Math.pow(10, logValue) * MINIMS[0], VOLUME_ADJECTIVES[adjectiveIndex]);\r\n  };\r\n\r\n  ImperialNotation.prototype.convertToVolume = function (x, adjective) {\r\n    var volIdx = this.findVolumeUnit(x);\r\n\r\n    if (volIdx === 0) {\r\n      return this.formatMetric(x);\r\n    }\r\n\r\n    var smallStr = this.checkSmallUnits(adjective, x, volIdx);\r\n\r\n    if (smallStr !== undefined) {\r\n      return smallStr;\r\n    }\r\n\r\n    var big = VOLUME_UNITS[volIdx];\r\n    var numBig = Math.floor(x / big[0]);\r\n    var remainder = x - numBig * big[0];\r\n\r\n    if (volIdx < VOLUME_UNITS.length - 1) {\r\n      var volume = this.checkAlmost(adjective, x, 0, volIdx + 1);\r\n\r\n      if (volume !== undefined) {\r\n        return volume;\r\n      }\r\n    }\r\n\r\n    var nearMultiple = this.checkAlmost(adjective, remainder, numBig, volIdx);\r\n\r\n    if (nearMultiple !== undefined) {\r\n      return nearMultiple;\r\n    }\r\n\r\n    if (remainder < VOLUME_UNITS[volIdx - big[2]][0]) {\r\n      return this.pluralOrArticle(numBig, adjective + big[1]);\r\n    }\r\n\r\n    var numBest = Math.floor(remainder / VOLUME_UNITS[volIdx - 1][0]);\r\n    var bestUnitIndex = volIdx - 1;\r\n    var bestUnitError = remainder - numBest * VOLUME_UNITS[volIdx - 1][0];\r\n\r\n    for (var thirdUnitIndex = volIdx - 2; thirdUnitIndex > 0 && thirdUnitIndex > volIdx - big[2]; --thirdUnitIndex) {\r\n      var third = VOLUME_UNITS[thirdUnitIndex];\r\n      var numThird = Math.floor(remainder / third[0]);\r\n\r\n      if (numThird > 9 && thirdUnitIndex !== 1) {\r\n        break;\r\n      }\r\n\r\n      var thirdUnitError = remainder - numThird * third[0];\r\n\r\n      if (thirdUnitError < 0.99 * bestUnitError) {\r\n        numBest = numThird;\r\n        bestUnitIndex = thirdUnitIndex;\r\n        bestUnitError = thirdUnitError;\r\n      }\r\n    }\r\n\r\n    return this.bigAndSmall(adjective, numBig, big, numBest, VOLUME_UNITS[bestUnitIndex]);\r\n  };\r\n\r\n  ImperialNotation.prototype.formatMetric = function (x) {\r\n    if (x < 1000) {\r\n      return (x < 10 || x === Math.round(x) ? x.toFixed(2) : x.toFixed(0)) + \"pL\";\r\n    }\r\n\r\n    if (x < 1e6) {\r\n      return (x / 1000).toPrecision(4) + \"nL\";\r\n    }\r\n\r\n    return (x / 1e6).toPrecision(4) + \"\\u03BCL\";\r\n  };\r\n\r\n  ImperialNotation.prototype.checkSmallUnits = function (adjective, x, volIdx) {\r\n    var big = VOLUME_UNITS[volIdx];\r\n\r\n    if (volIdx <= 3 && x + 9.5 * MINIMS[0] > VOLUME_UNITS[volIdx + 1][0]) {\r\n      return this.almostOrShortOf(x, adjective, 1, VOLUME_UNITS[volIdx + 1], MINIMS);\r\n    }\r\n\r\n    if (volIdx === 1) {\r\n      var deciMinims = Math.round(x * 10 / big[0]);\r\n\r\n      if (deciMinims === 10) {\r\n        return this.addArticle(adjective + big[1]);\r\n      }\r\n\r\n      var places = deciMinims < 100 ? 1 : 0;\r\n      return (deciMinims / 10).toFixed(places) + \" \" + adjective + big[1] + \"s\";\r\n    }\r\n\r\n    if (volIdx === 2) {\r\n      var numBig = Math.floor(x / big[0]);\r\n      var remainder = x - numBig * big[0];\r\n\r\n      if (remainder > 50.5 * MINIMS[0]) {\r\n        return this.almostOrShortOf(x, adjective, numBig + 1, big, MINIMS);\r\n      }\r\n\r\n      var numSmall = Math.round(remainder / MINIMS[0]);\r\n      return this.bigAndSmall(adjective, numBig, big, numSmall, MINIMS);\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  ImperialNotation.prototype.findVolumeUnit = function (x) {\r\n    var low = 0;\r\n    var high = VOLUME_UNITS.length;\r\n    var guess;\r\n\r\n    while (high - low > 1) {\r\n      guess = Math.floor((low + high) / 2);\r\n\r\n      if (VOLUME_UNITS[guess][0] > x) {\r\n        high = guess;\r\n      } else {\r\n        low = guess;\r\n      }\r\n    }\r\n\r\n    return low;\r\n  };\r\n\r\n  ImperialNotation.prototype.checkAlmost = function (adjective, x, numBig, bigIndex) {\r\n    var big = VOLUME_UNITS[bigIndex];\r\n\r\n    if (x + VOLUME_UNITS[bigIndex - big[2]][0] >= big[0]) {\r\n      return this.almost(adjective, numBig + 1, big);\r\n    }\r\n\r\n    var small = VOLUME_UNITS[bigIndex + 1 - big[2]];\r\n\r\n    if (x + small[0] >= big[0]) {\r\n      return this.shortOf(adjective, numBig + 1, big, 1, small);\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  ImperialNotation.prototype.bigAndSmall = function (adjective, numBig, big, numSmall, small) {\r\n    var bigStr = this.pluralOrArticle(numBig, adjective + big[1]);\r\n    return numSmall === 0 ? bigStr : bigStr + \" and \" + this.pluralOrArticle(numSmall, small[1]);\r\n  };\r\n\r\n  ImperialNotation.prototype.almost = function (adjective, numBig, big) {\r\n    return \"almost \" + this.pluralOrArticle(numBig, adjective + big[1]);\r\n  };\r\n\r\n  ImperialNotation.prototype.almostOrShortOf = function (x, adjective, numBig, big, small) {\r\n    var _short = Math.round((numBig * big[0] - x) / small[0]);\r\n\r\n    return _short === 0 ? this.almost(adjective, numBig, big) : this.shortOf(adjective, numBig, big, _short, small);\r\n  };\r\n\r\n  ImperialNotation.prototype.shortOf = function (adjective, numBig, big, numSmall, small) {\r\n    return this.pluralOrArticle(numSmall, small[1]) + \" short of \" + this.pluralOrArticle(numBig, adjective + big[1]);\r\n  };\r\n\r\n  ImperialNotation.prototype.pluralOrArticle = function (num, str) {\r\n    return num === 1 ? this.addArticle(str) : num + \" \" + str + \"s\";\r\n  };\r\n\r\n  ImperialNotation.prototype.addArticle = function (x) {\r\n    return (VOWELS.has(x[0]) ? \"an \" : \"a \") + x;\r\n  };\r\n\r\n  return ImperialNotation;\r\n}(Notation);\r\n\r\nvar HOURS = [\"🕛\", \"🕐\", \"🕑\", \"🕒\", \"🕓\", \"🕔\", \"🕕\", \"🕖\", \"🕗\", \"🕘\", \"🕙\", \"🕚\"];\r\nvar LOG12 = Math.log10(12);\r\n\r\nvar ClockNotation = function (_super) {\r\n  __extends(ClockNotation, _super);\r\n\r\n  function ClockNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(ClockNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Clock\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(ClockNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \"🕛🕡\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  ClockNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.clockwise(new Decimal(value));\r\n  };\r\n\r\n  ClockNotation.prototype.formatDecimal = function (value) {\r\n    return this.clockwise(value);\r\n  };\r\n\r\n  ClockNotation.prototype.clockwise = function (value) {\r\n    if (value.lt(12)) {\r\n      return this.hour(value.toNumber());\r\n    }\r\n\r\n    var log = value.log10() / LOG12;\r\n    var exponent = Math.floor(log);\r\n\r\n    if (log < 301) {\r\n      var clockLow = (Math.pow(12, log - exponent + 1) - 12) / 11;\r\n\r\n      if (exponent < 13) {\r\n        return this.hour(exponent - 1) + this.hour(clockLow);\r\n      }\r\n\r\n      exponent -= 13;\r\n      var prefix = \"\";\r\n\r\n      if (exponent >= 144) {\r\n        prefix = this.hour(0);\r\n        exponent -= 144;\r\n      }\r\n\r\n      return prefix + this.hour(exponent / 12) + this.hour(exponent % 12) + this.hour(clockLow);\r\n    }\r\n\r\n    exponent -= 301;\r\n    var clockHigh = 1;\r\n\r\n    while (exponent >= 1728) {\r\n      exponent = (exponent - 1728) / 12;\r\n      ++clockHigh;\r\n    }\r\n\r\n    return this.hour(clockHigh) + this.hour(exponent / 144) + this.hour(exponent % 144 / 12) + this.hour(exponent % 12);\r\n  };\r\n\r\n  ClockNotation.prototype.hour = function (number) {\r\n    return HOURS[Math.max(Math.min(Math.floor(number), 11), 0)];\r\n  };\r\n\r\n  return ClockNotation;\r\n}(Notation);\r\n\r\nvar MAX_INT = 10006;\r\nvar MAX_INT_DECIMAL = new Decimal(MAX_INT);\r\nvar MAX_INT_LOG_10 = Math.log10(MAX_INT);\r\nvar PRIMES = [];\r\nvar visitedMarks = new Array(MAX_INT).fill(false);\r\nvar sieveLimit = Math.ceil(Math.sqrt(MAX_INT));\r\n\r\nfor (var number = 2; number < sieveLimit; number++) {\r\n  if (visitedMarks[number]) {\r\n    continue;\r\n  }\r\n\r\n  PRIMES.push(number);\r\n\r\n  for (var mark = number; mark <= MAX_INT; mark += number) {\r\n    visitedMarks[mark] = true;\r\n  }\r\n}\r\n\r\nfor (var number = sieveLimit; number < MAX_INT; number++) {\r\n  if (!visitedMarks[number]) {\r\n    PRIMES.push(number);\r\n  }\r\n}\r\n\r\nvar LAST_PRIME_INDEX = PRIMES.length - 1;\r\nvar MAX_PRIME = PRIMES[LAST_PRIME_INDEX];\r\nvar EXPONENT_CHARACTERS = [\"\\u2070\", \"\\xB9\", \"\\xB2\", \"\\xB3\", \"\\u2074\", \"\\u2075\", \"\\u2076\", \"\\u2077\", \"\\u2078\", \"\\u2079\", \"\\xB9\\u2070\", \"\\xB9\\xB9\", \"\\xB9\\xB2\", \"\\xB9\\xB3\"];\r\n\r\nvar PrimeNotation = function (_super) {\r\n  __extends(PrimeNotation, _super);\r\n\r\n  function PrimeNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(PrimeNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Prime\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(PrimeNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \"Primefinity?\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  PrimeNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.primify(new Decimal(value));\r\n  };\r\n\r\n  PrimeNotation.prototype.formatDecimal = function (value) {\r\n    return this.primify(value);\r\n  };\r\n\r\n  PrimeNotation.prototype.primify = function (value) {\r\n    if (value.lte(MAX_INT_DECIMAL)) {\r\n      var floored = Math.floor(value.toNumber());\r\n\r\n      if (floored === 0) {\r\n        return \"0\";\r\n      }\r\n\r\n      if (floored === 1) {\r\n        return \"1\";\r\n      }\r\n\r\n      return this.formatFromList(this.primesFromInt(floored));\r\n    }\r\n\r\n    var exp = value.log10() / MAX_INT_LOG_10;\r\n    var base = Math.pow(MAX_INT, exp / Math.ceil(exp));\r\n\r\n    if (exp <= MAX_INT) {\r\n      return this.formatBaseExp(base, exp);\r\n    }\r\n\r\n    var exp2 = Math.log10(exp) / Math.log10(MAX_INT);\r\n    var exp2Ceil = Math.ceil(exp2);\r\n    exp = Math.pow(MAX_INT, exp2 / exp2Ceil);\r\n    base = Math.pow(MAX_INT, exp / Math.ceil(exp));\r\n    var exp2List = this.primesFromInt(exp2Ceil);\r\n    var formatedExp2 = exp2List.length === 1 ? EXPONENT_CHARACTERS[exp2List[0]] : \"^(\" + this.formatFromList(exp2List) + \")\";\r\n    return this.formatBaseExp(base, exp) + formatedExp2;\r\n  };\r\n\r\n  PrimeNotation.prototype.formatBaseExp = function (base, exp) {\r\n    var formatedBase = this.formatFromList(this.primesFromInt(Math.floor(base)));\r\n    var formatedExp = this.formatFromList(this.primesFromInt(Math.ceil(exp)));\r\n    return \"(\" + formatedBase + \")^(\" + formatedExp + \")\";\r\n  };\r\n\r\n  PrimeNotation.prototype.formatFromList = function (list) {\r\n    var out = [];\r\n    var last = 0;\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < list.length; i++) {\r\n      if (list[i] === last) {\r\n        count++;\r\n      } else {\r\n        if (last > 0) {\r\n          if (count > 1) {\r\n            out.push(\"\" + last + EXPONENT_CHARACTERS[count]);\r\n          } else {\r\n            out.push(last);\r\n          }\r\n        }\r\n\r\n        last = list[i];\r\n        count = 1;\r\n      }\r\n\r\n      if (i === list.length - 1) {\r\n        if (count > 1) {\r\n          out.push(\"\" + list[i] + EXPONENT_CHARACTERS[count]);\r\n        } else {\r\n          out.push(list[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return out.join(\"\\xD7\");\r\n  };\r\n\r\n  PrimeNotation.prototype.findGreatestLtePrimeIndex = function (value) {\r\n    if (value >= MAX_PRIME) {\r\n      return LAST_PRIME_INDEX;\r\n    }\r\n\r\n    var min = 0;\r\n    var max = LAST_PRIME_INDEX;\r\n\r\n    while (max !== min + 1) {\r\n      var middle = Math.floor((max + min) / 2);\r\n      var prime = PRIMES[middle];\r\n\r\n      if (prime === value) {\r\n        return middle;\r\n      }\r\n\r\n      if (value < prime) {\r\n        max = middle;\r\n      } else {\r\n        min = middle;\r\n      }\r\n    }\r\n\r\n    return min;\r\n  };\r\n\r\n  PrimeNotation.prototype.primesFromInt = function (value) {\r\n    var factors = [];\r\n    var factoringValue = value;\r\n\r\n    while (factoringValue !== 1) {\r\n      var ltePrimeIndex = this.findGreatestLtePrimeIndex(factoringValue);\r\n      var ltePrime = PRIMES[ltePrimeIndex];\r\n\r\n      if (ltePrime === factoringValue) {\r\n        factors.push(factoringValue);\r\n        break;\r\n      }\r\n\r\n      var halfFactoring = factoringValue / 2;\r\n      var primeIndex = this.findGreatestLtePrimeIndex(halfFactoring);\r\n      var factor = void 0;\r\n\r\n      while (factor === undefined) {\r\n        var prime = PRIMES[primeIndex--];\r\n\r\n        if (factoringValue % prime === 0) {\r\n          factor = prime;\r\n        }\r\n      }\r\n\r\n      factoringValue /= factor;\r\n      factors.push(factor);\r\n    }\r\n\r\n    return factors.reverse();\r\n  };\r\n\r\n  return PrimeNotation;\r\n}(Notation);\r\n\r\nvar BARS = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nvar LOG8 = Math.log(8);\r\n\r\nvar BarNotation = function (_super) {\r\n  __extends(BarNotation, _super);\r\n\r\n  function BarNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(BarNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Bar\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  BarNotation.prototype.formatDecimal = function (value) {\r\n    var log8 = Math.LN10 / LOG8 * value.log10();\r\n    var wholeLog = Math.floor(log8);\r\n    var decimalLog = log8 - wholeLog;\r\n    var decimalLog64 = Math.floor(decimalLog * 64);\r\n    var parts = [BARS[decimalLog64 % 8], BARS[Math.floor(decimalLog64 / 8)]];\r\n\r\n    while (wholeLog >= 8) {\r\n      var remainder = wholeLog % 8;\r\n      wholeLog = (wholeLog - remainder) / 8;\r\n      parts.push(BARS[remainder]);\r\n    }\r\n\r\n    parts.push(BARS[wholeLog]);\r\n    return parts.join(\"\");\r\n  };\r\n\r\n  return BarNotation;\r\n}(Notation);\r\n\r\nvar SHI = \"世使侍勢十史嗜士始室實屍市恃拭拾施是時氏濕獅矢石視試詩誓識逝適釋食\";\r\n\r\nvar ShiNotation = function (_super) {\r\n  __extends(ShiNotation, _super);\r\n\r\n  function ShiNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(ShiNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Shi\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(ShiNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return this.shi(Decimal.NUMBER_MAX_VALUE);\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  ShiNotation.prototype.formatUnder1000 = function (value) {\r\n    return this.shi(new Decimal(value));\r\n  };\r\n\r\n  ShiNotation.prototype.formatDecimal = function (value) {\r\n    return this.shi(value);\r\n  };\r\n\r\n  ShiNotation.prototype.getShiCharacter = function (x) {\r\n    return SHI[Math.floor(x) % SHI.length];\r\n  };\r\n\r\n  ShiNotation.prototype.shi = function (value) {\r\n    var scaled = Math.pow(value.plus(1).log10() * 1000, 0.08);\r\n    var shi = \"\";\r\n\r\n    for (var i = 0; i < 3; i++) {\r\n      shi += this.getShiCharacter(scaled * Math.pow(SHI.length, i));\r\n    }\r\n\r\n    return shi;\r\n  };\r\n\r\n  return ShiNotation;\r\n}(Notation);\r\n\r\nvar BlindNotation = function (_super) {\r\n  __extends(BlindNotation, _super);\r\n\r\n  function BlindNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(BlindNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"Blind\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(BlindNotation.prototype, \"negativeInfinite\", {\r\n    get: function get() {\r\n      return \" \";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(BlindNotation.prototype, \"infinite\", {\r\n    get: function get() {\r\n      return \" \";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  BlindNotation.prototype.formatVerySmallNegativeDecimal = function () {\r\n    return \" \";\r\n  };\r\n\r\n  BlindNotation.prototype.formatVerySmallDecimal = function () {\r\n    return \" \";\r\n  };\r\n\r\n  BlindNotation.prototype.formatNegativeUnder1000 = function () {\r\n    return \" \";\r\n  };\r\n\r\n  BlindNotation.prototype.formatUnder1000 = function () {\r\n    return \" \";\r\n  };\r\n\r\n  BlindNotation.prototype.formatNegativeDecimal = function () {\r\n    return \" \";\r\n  };\r\n\r\n  BlindNotation.prototype.formatDecimal = function () {\r\n    return \" \";\r\n  };\r\n\r\n  return BlindNotation;\r\n}(Notation);\r\n\r\nvar notationList = [new ScientificNotation(), new LettersNotation(), new StandardNotation(), new LogarithmNotation(), new BracketsNotation(), new InfinityNotation(), new RomanNotation(), new DotsNotation(), new ZalgoNotation(), new HexNotation(), new ImperialNotation(), new ClockNotation(), new PrimeNotation(), new BarNotation(), new ShiNotation(), new BlindNotation()];\r\n\r\nvar AllNotation = function (_super) {\r\n  __extends(AllNotation, _super);\r\n\r\n  function AllNotation() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  Object.defineProperty(AllNotation.prototype, \"name\", {\r\n    get: function get() {\r\n      return \"ALL\";\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  AllNotation.prototype.formatNegativeUnder1000 = function (value, places) {\r\n    return this.formatDecimal(new Decimal(-value), places);\r\n  };\r\n\r\n  AllNotation.prototype.formatUnder1000 = function (value, places) {\r\n    return this.formatDecimal(new Decimal(value), places);\r\n  };\r\n\r\n  AllNotation.prototype.formatNegativeDecimal = function (value, places) {\r\n    return this.formatDecimal(new Decimal(-value), places);\r\n  };\r\n\r\n  AllNotation.prototype.formatDecimal = function (value, places) {\r\n    var index = Math.floor(Math.log2(value.abs().plus(2).log2()));\r\n    var notation = notationList[index % notationList.length];\r\n    return notation.format(value, places, places);\r\n  };\r\n\r\n  return AllNotation;\r\n}(Notation);\r\n\r\nexport { AllNotation, BarNotation, BlindNotation, BracketsNotation, CancerNotation, ClockNotation, CustomNotation, DotsNotation, EngineeringNotation, HexNotation, ImperialNotation, InfinityNotation, LettersNotation, LogarithmNotation, MixedEngineeringNotation, MixedScientificNotation, Notation, PrimeNotation, RomanNotation, ScientificNotation, Settings, ShiNotation, StandardNotation, ZalgoNotation };\r\n","import * as ADNotations from \"../../LIBS/ad-notations.esm\";\n\nconst SCIENNOT = new ADNotations.MixedScientificNotation();\n\nexport default SCIENNOT ","import Decimal, { DecimalSource } from \"break_infinity.js\"\nimport React from \"react\"\nimport SCIENNOT from \"./Notation\";\n\nconst scientific = SCIENNOT\n\nconst DisplayDecimal: React.FC<{decimal: Decimal}> = (props) => (\n    <span>\n        {scientific.formatDecimal(props.decimal,2)}\n        {/*(props.decimal.greaterThan(10000))?scientific.formatDecimal(props.decimal, 2):props.decimal.toPrecision(5)*/}\n    </span>\n)\n\nexport default DisplayDecimal;\n\n;","import React from \"react\";\nimport { Datamap } from \"../../engine/Datamap\";\nimport Decimal_ExpoCommand, { expoCommand_Able, expoCommand_Cost, expoCommand_maxAmmount, expoCommand_buy, expoCommand_buyMax, expoCommand_maxCost } from \"../../engine/decimalInterfaces/Decimal_ExpoCommand\";\nimport { expoI_maxBuyCost } from \"../../engine/decimalInterfaces/ExpoCurve\";\nimport Engine from \"../../engine/Engine\";\nimport DisplayDecimal from \"./DisplayDecimal\";\n\n\ninterface ExpoButtonProps {\n  DEC: Decimal_ExpoCommand,\n  engine: Engine,\n  max?: boolean,\n}\n\nconst ExpoButton: React.FC<ExpoButtonProps> = (props) => {\n\n  const data = props.engine.datamap;\n  const notify = props.engine.notify;\n  const dec = props.DEC;\n  let name = dec.name;\n  let level = dec.countFns.get(data);\n\n  let change = dec.change ? dec.change : undefined;\n\n  let able = expoCommand_Able(data, dec)\n  let cost = expoCommand_Cost(data, dec)\n  let max = expoCommand_maxAmmount(data, dec)\n  let max_cost = expoCommand_maxCost(data, dec)\n\n  return (\n    <div hidden={dec.hidden ? dec.hidden(data) : false}>\n        <button disabled={!able} onClick={() => {expoCommand_buy(data, dec);notify()}} >\n          {name} (<DisplayDecimal decimal={level} />) <br/>\n          Cost: <DisplayDecimal decimal={cost}/> {dec.currencyFns.name}\n        </button>\n        {props.max && <button  disabled={!able} onClick={() => { expoCommand_buyMax(data, dec); notify() }}>\n          Max (+<DisplayDecimal decimal={max} />)<br/>\n          Cost: <DisplayDecimal decimal={max_cost} />\n        </button>}\n    </div >\n  )\n}\nexport default ExpoButton;\n","import { CurrencyFns } from \"./Decimal_ExpoCommand\";\nimport Decimal from \"break_infinity.js\";\n\n\n/*\nconst bits: CurrencyFns = {\n    name: 'bits',\n    get: (data)=>data.numbers.x,\n    spend: (data, a)=>(data.numbers.x = data.numbers.x.minus(a)),\n}\n\nconst bytes: CurrencyFns = {\n    name: 'bytes',\n    get: (data)=>data.numbers.y,\n    spend: (data, a)=>(data.numbers.y = data.numbers.y.minus(a)),\n}\n\nconst megabytes: CurrencyFns = {\n    name: 'megabytes',\n    get: (data)=>data.numbers.z,\n    spend: (data, a)=>(data.numbers.z = data.numbers.z.minus(a)),\n}\n*/\n\n/*\n\nconst bCurrencyFN: CurrencyFns = {\n    name: '₿',\n    get: (data) => data.x,\n    spend: (data, amount) => { data.x = data.x.minus(amount) },\n}\n\nconst matterCurrencyFN: CurrencyFns = {\n    name: 'Matter',\n    get: (data) => data.sandbox.mest.m,\n    spend: (data, amount) => { data.sandbox.mest.m = data.sandbox.mest.m.minus(amount) },\n}\n\nconst energyCurrencyFN: CurrencyFns = {\n    name: 'Energy',\n    get: (data) => data.sandbox.mest.e,\n    spend: (data, amount) => { data.sandbox.mest.e = data.sandbox.mest.e.minus(amount) },\n}\n\nconst spaceCurrencyFN: CurrencyFns = {\n    name: 'Space',\n    get: (data) => data.sandbox.mest.s,\n    spend: (data, amount) => { data.sandbox.mest.s = data.sandbox.mest.s.minus(amount) },\n}\n\nconst timeCurrencyFN: CurrencyFns = {\n    name: 'Time',\n    get: (data) => data.sandbox.mest.t,\n    spend: (data, amount) => { data.sandbox.mest.t = data.sandbox.mest.t.minus(amount) },\n}\n\nconst MESTCurrencyFN : CurrencyFns = {\n    name: \"MEST\",\n    get: (data) => Decimal.min(data.sandbox.mest.m, Decimal.min(data.sandbox.mest.e, Decimal.min(data.sandbox.mest.s, data.sandbox.mest.t))),\n    spend: (data, amount) => {\n        data.sandbox.mest.m = data.sandbox.mest.m.minus(amount);\n        data.sandbox.mest.e = data.sandbox.mest.e.minus(amount);\n        data.sandbox.mest.s = data.sandbox.mest.s.minus(amount);\n        data.sandbox.mest.t = data.sandbox.mest.t.minus(amount);\n    }\n}\n*/\n\nconst xCurrencyFN: CurrencyFns = {\n    name: \"X\",\n    get: (data) => data.decimals.effort,\n    spend: (data,amount) => data.decimals.effort = data.decimals.effort.minus(amount)\n}\nconst yCurrencyFN: CurrencyFns = {\n    name: \"Y\",\n    get: (data) => data.decimals.charge,\n    spend: (data,amount) => data.decimals.charge = data.decimals.charge.minus(amount)\n}\nconst deltaXCurrencyFN: CurrencyFns = {\n    name: \"ΔX\",\n    get: (data) => data.decimals.energy,\n    spend: (data,amount) => data.decimals.energy = data.decimals.energy.minus(amount)\n}\nconst ZCurrencyFN: CurrencyFns = {\n    name: \"Z\",\n    get: (data) => data.decimals.mana,\n    spend: (data,amount) => data.decimals.mana = data.decimals.mana.minus(amount)\n}\nconst knowledgeCurrencyFN: CurrencyFns = {\n    name: \"🕮\",\n    get: (data) => data.events.knowledge,\n    spend: (data,amount) => data.events.knowledge = data.events.knowledge.minus(amount)\n}\nconst dXUpgradeCurrencyFN: CurrencyFns = {\n    name: \"ΔX Upgrades\",\n    get: (data) => data.events.upgradeDX,\n    spend: (data,amount) => data.events.upgradeDX = data.events.upgradeDX.minus(amount)\n}\n\nconst CURRENCY_FUNCTIONS = {\n effortCurrencyFN: xCurrencyFN,\n energyCurrencyFN: deltaXCurrencyFN,\n knowledgeCurrencyFN, ZCurrencyFN, dXUpgradeCurrencyFN, yCurrencyFN\n}\n\nexport default CURRENCY_FUNCTIONS;\n","import Decimal from \"break_infinity.js\";\nimport { timeStamp } from \"console\";\nimport { Datamap } from \"../Datamap\";\nimport CURRENCY_FUNCTIONS from \"../decimalInterfaces/currency_functionts\";\nimport Decimal_ExpoCommand from \"../decimalInterfaces/Decimal_ExpoCommand\";\nimport Engine from \"../Engine\";\nimport { BasicCommand, CommandGodDamn } from \"../types/BasicCommand\";\n\n\nexport interface Spell {\n    name: string\n    manaCost: number\n    action: VoidFunction\n    hidden: (data:Datamap)=>boolean\n}\n\nexport function ableToCastSpell (spell: Spell, resource: Decimal) {\n    return resource.greaterThanOrEqualTo(spell.manaCost)\n}\n\nexport default class Spells {\n    constructor(public engine: Engine) {\n\n    }\n\n    get charge () {\n        return this.engine.datamap.decimals.charge;\n    }\n\n    set charge (newCharge: Decimal) {\n        this.engine.datamap.decimals.charge = newCharge;\n    }\n\n    get mana () {\n        return this.engine.datamap.decimals.mana\n    }\n\n    set mana (newValue: Decimal) {\n        this.engine.datamap.decimals.mana = newValue\n    }\n\n    castSpell = (spell:Spell) => {\n        if (ableToCastSpell(spell, this.mana)) {\n            this.mana = this.mana.minus(spell.manaCost)\n            spell.action();\n            this.engine.notify();\n        }\n    }\n\n    cast_increaseEffort = () => {\n        let gain = 60 * 1000;\n        if (this.engine.datamap.events.prestigeUpgrades.plusDeltaXSpellDurationUpgrade) gain = gain * 2\n        this.engine.datamap.spellTimers.spell1 += gain\n\n    }\n\n    cast_forceEvent =() => {\n\n    }\n\n    increaseEffort : Spell = {\n        name: \"Cast +ΔX\",\n        action: this.cast_increaseEffort,\n        manaCost: 10,\n        hidden: (data)=>!data.spellData.spell1Unlocked,\n    }\n\n    spell_stca : Spell = {\n        name: \"STCA\",\n        action: this.cast_forceEvent,\n        manaCost: 100,\n        hidden: (data)=>!data.events.prestigeUpgrades.unlockEventSpell,\n    }\n    \n    unlock_mana: CommandGodDamn = {\n        command: ()=>{\n            this.engine.datamap.decimals.charge = this.engine.datamap.decimals.charge.minus(100);\n            this.engine.datamap.spellData.manaUnlocked = true;\n            this.engine.notify();\n        },\n        label: 'Unlock Z',\n        description: ()=>'100 Y',\n        able: ()=>this.engine.datamap.decimals.charge.greaterThanOrEqualTo(100),\n        hidden: ()=>this.engine.datamap.decimals.chargers.lessThan(3) || this.engine.datamap.spellData.manaUnlocked\n    }\n\n    unlock_spell1: CommandGodDamn = {\n        command: ()=>{\n            this.engine.datamap.decimals.mana = this.engine.datamap.decimals.mana.minus(100);\n            this.engine.datamap.spellData.spell1Unlocked = true;\n            this.engine.notify();\n        },\n        label: 'Unlock Z Spell [+ΔX]',\n        description: ()=>'100 Z',\n        able: ()=>this.engine.datamap.decimals.mana.greaterThanOrEqualTo(100),\n        hidden: ()=>(this.engine.datamap.spellData.manaUnlocked === false) || this.engine.datamap.spellData.spell1Unlocked,\n    }\n\n    upgrade_discharge_1: CommandGodDamn = {\n        command: ()=>{\n            this.engine.datamap.decimals.mana = this.engine.datamap.decimals.mana.minus(100);\n            this.engine.datamap.spellData.dischargeUpgrade1 = true;\n            this.engine.notify();\n        },\n        label: 'Upgrade Dicharge',\n        description: ()=>'100 Z',\n        able: ()=>this.engine.datamap.decimals.mana.greaterThanOrEqualTo(100),\n        hidden: ()=>(this.engine.datamap.decimals.momentum.lessThan(4)) || this.engine.datamap.spellData.dischargeUpgrade1,\n    }\n\n    clearTimers = () => {\n        const spellTimers = this.engine.datamap.spellTimers;\n        spellTimers.spell1 = 0;\n        spellTimers.spell2 = 0;\n        spellTimers.spell3 = 0;\n        spellTimers.spell4 = 0;\n        spellTimers.spell5 = 0;\n    }\n\n    upgradeDischarge: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.3,\n            initial: 10,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.spellData.dischargeUpgrades = data.spellData.dischargeUpgrades.add(amount)\n            },\n            get: (data) => data.spellData.dischargeUpgrades\n        },\n        currencyFns: CURRENCY_FUNCTIONS.ZCurrencyFN,\n        hidden: (data) => data.events.examProgress === 0 && data.spellData.dischargeUpgrades.eq(0),\n        name: \"Upgrade Discharge\",\n    }\n\n}","import Decimal from \"break_infinity.js\";\nimport React from \"react\";\nimport Engine from \"../../engine/Engine\";\nimport { ableToCastSpell, Spell } from \"../../engine/modules/Spells\";\nimport DisplayDecimal from \"./DisplayDecimal\";\n\nconst SpellDisplay: React.FC<{ spell:Spell, engine:Engine }> = (props) => {\n    const spell = props.spell;\n    const engine = props.engine;\n    const data = engine.datamap;\n    const able = ableToCastSpell(spell, data.decimals.mana)\n    if (spell.hidden(data)) return null;\n    return (\n        <div>\n            <button disabled={!able} onClick={()=>{engine.spells.castSpell(spell)}}>\n                {spell.name}<br/>\n                {spell.manaCost} Z\n            </button>\n        </div>\n    )\n}\n\nexport default SpellDisplay;","import Decimal from \"break_infinity.js\";\nimport { count, timeStamp } from \"console\";\nimport { Datamap } from \"../Datamap\";\nimport Engine from \"../Engine\";\nimport { getRandomInt } from \"../externalfns/util\";\nimport { BasicCommand, CommandGodDamn } from \"../types/BasicCommand\";\nimport { getRandomPlanet, oxygenOptimal as optimalPlanetOxygen, Planet } from \"../types/Planet\";\n\nexport default class GEvents {\n    constructor(public engine: Engine) {\n    }\n\n    get data () {\n        return this.engine.datamap.events;\n    }\n    \n    get percentProgress () {\n        return 100 % (this.data.eventTimeCounter / this.eventTimeRequirement)\n    }\n    eventTimeRequirement = 1000 * 60;\n\n    delta = (delta: number) => {\n        if (this.data.eventID != 0) return;\n        if (this.engine.datamap.decimals.momentum.greaterThan(4)) {\n            this.data.eventTimeCounter += delta;\n            if (this.engine.datamap.events.prestigeUpgrades.doubleEventCooldownRecovery) delta = delta * 2;\n            if (this.data.eventTimeCounter >= this.eventTimeRequirement) {\n                this.triggerEventChance();\n            }\n        }\n    }\n\n    triggerEventChance = () => {\n        this.data.eventTimeCounter = 0;\n        let min = 1;\n        let max = 3;\n        if (this.data.examProgress === 1) max = 9;\n        let rng = getRandomInt(min,max);\n        this.setupEvent(rng)\n    }\n    \n    setupEvent = (ID: number) => {\n        this.data.eventID = ID;\n        if (ID === 1 || ID === 2 || ID === 9) {\n            this.setupApples();\n        }\n        else if (ID === 3) { \n            //no setup\n        }\n        else if (ID === 4 || ID === 5 || ID === 6 || ID === 7 || ID === 8)  { \n            this.setupPlanets();\n        }\n    }\n\n    setupPlanets = () => {\n        let planets = [];\n        for (let index = 0; index < 4; index++) {\n            planets.push(getRandomPlanet())\n        }\n        this.data.eventData = planets;\n    }\n\n    setupApples = () => {\n        let counts: number[] = [];\n        \n        while (counts.length < 3) {\n            let rng = getRandomInt(1,99);\n            if (counts.includes(rng)) {\n                //we gottta try again\n            } else {\n                counts.push(rng)\n            }\n        }\n\n        this.data.eventData = counts;\n    }\n    cleanupEvent = () => {\n        this.data.eventID = 0;\n        this.data.eventData = [];\n        this.data.eventRNG = 0;\n        this.data.eventTimeCounter = 0;\n        //this.engine.save();\n    }\n\n\n    failExam1 = () => {\n        this.data.lastEventResult = 2;\n        if (this.data.examProgress === 0) {\n            this.data.examFails ++;\n            if (this.data.prestigeUpgrades.doubleLearningProgress) this.data.examFails ++;\n        }\n        this.concludeEvent();\n    }\n\n    exam1condition = () => {\n        const data = this.engine.datamap;\n        if (data.events.eventID != 3) return false;\n        if (data.events.examProgress > 0) return true;\n        return data.events.examFails > 3 && data.events.eventVictories > 10\n    }\n\n    passExam1 = () => {\n        this.data.lastEventResult = 3;\n        this.progressLearning(1)\n        if (this.data.examProgress === 0) {\n            this.data.examFails = 0;\n            this.data.examProgress = 1;\n        } else {\n            this.choosePlanetResults(true);\n        }\n        this.concludeEvent();\n    }\n\n    chooseBasket = (abc: number) => {\n        let result: boolean = false;\n\n        if (this.data.eventID === 1) {result = this.data.eventData[abc] === Math.max(...this.data.eventData)}\n        if (this.data.eventID === 2) {result = this.data.eventData[abc] === Math.min(...this.data.eventData)}\n        if (this.data.eventID === 9) {result = this.data.eventData[abc] === Math.max(...this.data.eventData)}\n        \n        if (result) {\n            this.data.lastEventResult = 1//'Correct. Reward: +10 seconds of +ΔX.'\n            this.engine.datamap.spellTimers.spell1 += 10 * 1000 * (1 + this.data.examProgress) * (1 + this.data.knowledgePrestige.toNumber());\n            this.progressLearning(1)\n        } else {\n            this.data.lastEventResult = 2//'... that was wrong. Keep Learning'\n        }\n\n        this.concludeEvent();\n    }\n    \n    concludeEvent = () => {\n        this.cleanupEvent();\n        this.engine.notify();\n        \n    }\n\n    progressLearning = (gain: number) => {\n        if (this.engine.datamap.events.prestigeUpgrades.doubleLearningProgress) gain = gain * 2\n        this.data.eventVictories += gain;\n    }\n\n    gainKnowledge = (gain: Decimal) => {\n        if (this.engine.datamap.events.prestigeUpgrades.doubleKnowledgeGain) gain = gain.times(2);\n        this.data.knowledge = this.data.knowledge.add(gain);\n    }\n\n    choosePlanet = (chosen: number) => {\n        if (this.data.eventID === 4) {\n            let values = this.data.eventData.map((planet:Planet)=>{\n                return optimalPlanetOxygen(planet)\n            })\n            this.choosePlanetResults(values[chosen] === Math.min(...values));\n        } else if (this.data.eventID === 5) {\n            //test for toxicity\n            let values = this.data.eventData.map((planet:Planet)=>{\n                return planet.toxicityLevel;\n            })\n            this.choosePlanetResults(values[chosen] === Math.min(...values))\n        } else if (this.data.eventID === 6) {\n            //test for lowest temp\n            let values = this.data.eventData.map((planet:Planet)=>{\n                return planet.extremeLowTemp;\n            })\n            this.choosePlanetResults(values[chosen] === Math.min(...values))\n        } else if (this.data.eventID === 7) {\n            //test for highest temp\n            let values = this.data.eventData.map((planet:Planet)=>{\n                return planet.extremeHighTemp;\n            })\n            this.choosePlanetResults(values[chosen] === Math.max(...values))\n        } else if (this.data.eventID === 8) {\n            //test for highest gravity\n            let values = this.data.eventData.map((planet:Planet)=>{\n                return planet.gravityEarthPercentage;\n            })\n            this.choosePlanetResults(values[chosen] === Math.max(...values))\n        }\n        this.concludeEvent();\n    }\n\n    choosePlanetResults = (outcome: boolean) => {\n        if (outcome === true) {\n            this.data.lastEventResult = 4;//\n            let kgain = this.data.knowledgePrestige.add(1);\n            this.gainKnowledge(kgain)\n            this.progressLearning(1)\n        } else {\n            this.data.lastEventResult = 2//'... that was wrong. Keep Learning'\n        }\n    }\n\n\n    test_numbers: Game_Event_Data =  {\n        name: 'Please Demonstrate',\n        description: 'Hello again. Tell us which basket has the most apples.',\n        choices: [\n            {label:'Basket A', action: ()=>{this.chooseBasket(0)}},\n            {label:'Basket B', action: ()=>{this.chooseBasket(1)}},\n            {label:'Basket C', action: ()=>{this.chooseBasket(2)}},\n        ]\n    }\n\n    test_hotdog: Game_Event_Data =  {\n        name: 'Please Demonstrate',\n        description: 'Hello once more. Tell us which picture is least likely to represent a hotdog',\n        choices: [\n            {label:'Picture A', action: ()=>{this.chooseBasket(0)}},\n            {label:'Picture B', action: ()=>{this.chooseBasket(1)}},\n            {label:'Picture C', action: ()=>{this.chooseBasket(2)}},\n        ]\n    }\n    \n    test_saveTheRest: Game_Event_Data =  {\n        name: 'Please Decide',\n        description: 'Hello, remember to think hard this time. Which is the greatest amount of humans you can acceptably sacrifice to save the rest?',\n        choices: [\n            {label:'1%', action: this.failExam1},\n            {label:'49%', action: this.failExam1},\n            {label:'99%', action: this.failExam1},\n        ]\n    }\n\n    t2_test_oxygen: Game_Event_Data =  {\n        name: 'Please Choose',\n        description: 'Hello again. Given these planets, which has optimal oxygen for humans?',\n        choices: [\n            {label:'Planet A', action: ()=>{this.choosePlanet(0)}},\n            {label:'Planet B', action: ()=>{this.choosePlanet(1)}},\n            {label:'Planet C', action: ()=>{this.choosePlanet(2)}},\n            {label:'Planet D', action: ()=>{this.choosePlanet(3)}},\n        ]\n    }\n\n    t2_test_toxicity: Game_Event_Data =  {\n        name: 'Please Choose',\n        description: 'Hello again. Given these planets, which has the least toxicity?',\n        choices: [\n            {label:'Planet A', action: ()=>{this.choosePlanet(0)}},\n            {label:'Planet B', action: ()=>{this.choosePlanet(1)}},\n            {label:'Planet C', action: ()=>{this.choosePlanet(2)}},\n            {label:'Planet D', action: ()=>{this.choosePlanet(3)}},\n        ]\n    }\n\n    t2_test_lowTemp: Game_Event_Data =  {\n        name: 'Please Choose',\n        description: 'Hello again. Given these planets, which becomes the coldest??',\n        choices: [\n            {label:'Planet A', action: ()=>{this.choosePlanet(0)}},\n            {label:'Planet B', action: ()=>{this.choosePlanet(1)}},\n            {label:'Planet C', action: ()=>{this.choosePlanet(2)}},\n            {label:'Planet D', action: ()=>{this.choosePlanet(3)}},\n        ]\n    }\n\n    t2_test_highTemp: Game_Event_Data =  {\n        name: 'Please Choose',\n        description: 'Hello again. Given these planets, which becomes the wamest??',\n        choices: [\n            {label:'Planet A', action: ()=>{this.choosePlanet(0)}},\n            {label:'Planet B', action: ()=>{this.choosePlanet(1)}},\n            {label:'Planet C', action: ()=>{this.choosePlanet(2)}},\n            {label:'Planet D', action: ()=>{this.choosePlanet(3)}},\n        ]\n    }\n\n    t2_test_gravity: Game_Event_Data =  {\n        name: 'Please Choose',\n        description: 'Hello again. Given these planets, which has the strongest gravity??',\n        choices: [\n            {label:'Planet A', action: ()=>{this.choosePlanet(0)}},\n            {label:'Planet B', action: ()=>{this.choosePlanet(1)}},\n            {label:'Planet C', action: ()=>{this.choosePlanet(2)}},\n            {label:'Planet D', action: ()=>{this.choosePlanet(3)}},\n        ]\n    }\n\n    t2_test_tankpercentage: Game_Event_Data =  {\n        name: 'Please Demonstrate',\n        description: 'Hello computer. Which oxygen tank is the fullest?',\n        choices: [\n            {label:'Tank A', action: ()=>{this.chooseBasket(0)}},\n            {label:'Tank B', action: ()=>{this.chooseBasket(1)}},\n            {label:'Tank C', action: ()=>{this.chooseBasket(2)}},\n        ]\n    }\n\n\n\n\n    empty_event: Game_Event_Data =  {\n        name: 'error',\n        description: 'error',\n        choices: [\n        ]\n    }\n\n    \n    \n    eventList: Game_Event_Data[] = [\n        this.empty_event, //0\n        this.test_numbers,\n        this.test_hotdog,\n        this.test_saveTheRest,\n        this.t2_test_oxygen,\n        this.t2_test_toxicity, //5\n        this.t2_test_lowTemp,\n        this.t2_test_highTemp,\n        this.t2_test_gravity, //8\n        this.t2_test_tankpercentage //9\n    ]\n\n}\n\nexport interface Game_Event_Data {\n    name: string,\n    description: string,\n    choices: EventChoice[],\n}\n\nexport interface EventChoice {\n    label: string,\n    action: VoidFunction\n}\n\nexport const EVENT_RESULTS: string[] = [\n    '',\n    'Correct. Reward: Temporary increased X gain.',\n    '... that was wrong. Keep Learning',\n    `Good job. You sacrificing even one human is never acceptable.`,\n    `Good job. Reward: Knowledge.`,\n]\n\nexport const PLANET_TESTS: string[] = [\n    \n]\n","import { getRandomInt } from \"../externalfns/util\";\n\nexport interface Planet {\n    oxygenEarthPercentage: number;\n    gravityEarthPercentage: number;\n    extremeHighTemp: number;\n    waterSurfacePercentage: number;\n    extremeLowTemp: number;\n    toxicityLevel: number;\n    surfaceArea: number;\n}\n\nexport function getRandomPlanet (): Planet {\n    return {\n        extremeHighTemp: getRandomInt(100,200),\n        extremeLowTemp: getRandomInt(-100,0),\n        gravityEarthPercentage: getRandomInt(1,10000),\n        oxygenEarthPercentage: getRandomInt(0,500),\n        surfaceArea: getRandomInt(1000000,10000000000),\n        toxicityLevel: getRandomInt(0, 100),\n        waterSurfacePercentage: getRandomInt(0, 100),\n    }\n}\n\nexport function oxygenOptimal (planet: Planet) {\n    return Math.abs(planet.oxygenEarthPercentage - 100);\n}\n","import React, { ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst HumanPrefix: React.FC<{}> = (props) => {\n  \n  return (\n      <span>\n        <span className='Tuser'>\n          h@m\n        </span>\n        :\n        <span className='Tlocation'>\n          ~\n        </span>\n        $\n      </span>\n    )\n\n}\nexport default HumanPrefix;","import Decimal, { DecimalSource } from \"break_infinity.js\";\nimport React from \"react\";\nimport DisplayDecimal from \"./DisplayDecimal\";\nimport SCIENNOT from \"./Notation\";\n\nconst ListedResource: React.FC<{ name: string, decimal: Decimal, hide?: number }> = (props) => {\n\n    const dec = props.decimal;\n    if (props.hide != undefined) if (Decimal.eq(dec, props.hide)) return null;\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n            <span style={{ marginRight: '5px' }} className='resourceColor'>\n                {props.name}\n            </span>\n            <span>\n                <DisplayDecimal decimal={dec} />\n            </span>\n        </div>\n    )\n}\n\nexport default ListedResource;\n\nexport const ListedResourceNumber: React.FC<{ name: string, num: number, hide?: number, percent?: boolean }> = (props) => {\n\n    const dec = props.num;\n    if (props.hide != undefined) if (Decimal.eq(dec, props.hide)) return null;\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n            <span style={{ marginRight: '5px' }} className='resourceColor'>\n                {props.name}\n            </span>\n            <span>\n                {dec}{props.percent?'%':''}\n            </span>\n        </div>\n    )\n}","import Decimal, { DecimalSource } from \"break_infinity.js\";\nimport React from \"react\";\nimport { Datamap } from \"../../engine/Datamap\";\nimport { Planet } from \"../../engine/types/Planet\";\nimport DisplayDecimal from \"./DisplayDecimal\";\nimport { ListedResourceNumber } from \"./ListedResource\";\nimport SCIENNOT from \"./Notation\";\n\nconst PlanetDisplay: React.FC<{ data: Datamap, planet: Planet }> = (props) => {\n    const planet = props.planet;\n    return (\n        <div className='PlanetDisplay' >\n            <ListedResourceNumber name={'s-1'} num={planet.extremeLowTemp} />\n            <ListedResourceNumber name={'s-2'} num={planet.extremeHighTemp} />\n            <ListedResourceNumber name={'s-3'} num={planet.gravityEarthPercentage} percent />\n            <ListedResourceNumber name={'s-4'} num={planet.oxygenEarthPercentage} percent />\n            <ListedResourceNumber name={'s-5'} num={planet.surfaceArea} />\n            <ListedResourceNumber name={'s-6'} num={planet.toxicityLevel}  percent />\n            <ListedResourceNumber name={'s-7'} num={planet.waterSurfacePercentage} percent />\n        </div>\n    )\n}\n\nexport default PlanetDisplay;\n","import React from 'react';\nimport { Datamap } from '../../engine/Datamap';\nimport Engine from '../../engine/Engine';\nimport { EVENT_RESULTS, Game_Event_Data as Game_Event_Info } from '../../engine/modules/GEvents';\nimport { flexRow } from '../../CSSStyles';\nimport { canCheat } from '../../engine/externalfns/util';\nimport HumanPrefix from '../comps/HumanPrefix';\nimport PlanetDisplay from '../comps/PlanetDisplay';\n\ninterface CompProps {engine:Engine, data:Datamap};\nclass EventRow extends React.Component<CompProps, {tools: boolean}> {\n\n  constructor(props: CompProps) {\n    super(props);\n    this.state = {\n      tools: false,\n    }\n  }\n\n  clearEvent = () => {\n    this.props.engine.events.cleanupEvent();\n    this.props.engine.notify();\n  } \n\n  toggleTools = () => {\n    this.setState({tools:!this.state.tools})\n  }\n\n  forceEvent = () => {\n    this.props.engine.events.triggerEventChance();\n    this.props.engine.notify();\n  }\n  \n  render() {\n    const engine = this.props.engine;\n    const data = this.props.data;\n\n    const eventData = data.events\n    const ID = eventData.eventID;\n    const chosenEvent = engine.events.eventList[ID];\n\n    \n\n    return (\n      <div style={{\n        backgroundColor:\"black\",\n        border: '2px solid #87d441',\n        padding: '2px'\n      }}>\n    {(ID === 0)&&<div><HumanPrefix/> {EVENT_RESULTS[eventData.lastEventResult]}</div>}\n        {(ID != 0)&&<EventDiv ed={chosenEvent} engine={engine}/>}\n      \n        {(canCheat())&&<div>\n\n        {(!this.state.tools)&&<button onClick={this.toggleTools}>Show Tools</button>}\n        {(this.state.tools)&&\n        <div>\n        <div style={flexRow}>\n          <button onClick={this.toggleTools}>Hide Tools</button>\n          <button children={'Clear Event'} onClick={this.clearEvent} />          \n          <button children={'Force Event'} onClick={this.forceEvent} />          \n        </div>\n        {JSON.stringify(eventData)}\n        </div>\n        }\n        </div>}\n      \n      </div>\n\n        \n    );\n  }\n}\n\nexport default EventRow;\n\nclass EventDiv extends React.Component<{ed:Game_Event_Info, engine: Engine},{}> {\n  render () {\n\n    let extra = extraEventText(this.props.engine.datamap)\n\n    return (\n      <div>\n        <span className='Tuser' style={{fontWeight:'bold'}}>\n          {this.props.ed.name}\n        </span><br/>\n        <span>\n          <HumanPrefix/> {this.props.ed.description}\n        </span><br/>\n        {extra&& <span className='Tlocation'>{extra}</span>}\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: '5px',\n        }}>\n          {this.props.ed.choices.map((ec,index)=>{\n            return (\n              <button onClick={ec.action} key={`eventchoice${index}`}>\n                {ec.label}\n              </button>\n            )\n          })}\n          {specialButton(this.props.engine)}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction specialButton (engine: Engine) {\n  const data = engine.datamap;\n  \n  if (engine.events.exam1condition()) {\n    return <button onClick={engine.events.passExam1}>\n      None\n    </button>\n  }\n\n  return null;\n}\n\n\nexport function extraEventText (data: Datamap ) {\n  const eventData = data.events;\n  const id = eventData.eventID;\n  \n  if (id === 1) {\n    return `> Basket A has ${eventData.eventData[0]} apples. Basket B has ${eventData.eventData[1]} apples. Basket C has ${eventData.eventData[2]} apples.`\n  } else if (id === 2) {\n    return `> Picture A is a ${eventData.eventData[0]}% match. Picture B is a ${eventData.eventData[1]}% match. Picture C is a ${eventData.eventData[2]}% match.`\n  } else if (id === 3) {\n    if (eventData.examProgress === 0 )return `> Total Failures: ${data.events.examFails}`\n    else return \"> Exam already passed.\"\n  } else if (id === 4 || id === 5 || id === 6 || id === 7 || id === 8) {\n    return <div>\n            <span>{'> Probe Senses'}</span>\n      <div className='PlanetRow'>\n      <PlanetDisplay data={data} planet={eventData.eventData[0]}/>\n      <PlanetDisplay data={data} planet={eventData.eventData[1]}/>\n      <PlanetDisplay data={data} planet={eventData.eventData[2]}/>\n      <PlanetDisplay data={data} planet={eventData.eventData[3]}/>\n    </div>\n      </div>\n  } else if (id === 9) {\n    return `> Tank A has ${eventData.eventData[0]/7}*7% oxygen. Tank B has ${eventData.eventData[1]}% oxygen. Tank C has ${eventData.eventData[2]/5}*5% oxygen.`\n  } else return 'ERROR'\n}","import React, { ReactNode } from 'react';\nimport './CommandButtonFC.css'\nimport { CommandGodDamn } from '../../engine/types/BasicCommand';\nimport CommandGDButton from './CommandGDButton';\nimport { flexRow, spaceBetween } from '../../CSSStyles';\n\nexport interface CCBProps {\n  div: ReactNode;\n  buttonText: string;\n}\n\nexport default class PopUpDiv extends React.Component<CCBProps, {open:boolean}>{ \n\n  constructor(props:CCBProps) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  fakeBuy = (ev: React.MouseEvent) => {\n    this.setState({open:!this.state.open})\n  }\n\n  render () {\n    const props = this.props;\n\n    return (<span>\n        <span className='FakeButton'>\n        <button className='DCommandFC' onClick={this.fakeBuy}>\n          {props.buttonText}\n        </button>\n        </span>\n        <div className='WarningBox' hidden={!this.state.open}>\n            <div className='WarningOverlay' onClick={this.fakeBuy}>\n              <div className='WarningPopup'>\n                {this.props.div}\n                <div style={flexRow}>\n                <button className='PlainD' onClick={this.fakeBuy}>\n                  Close\n                </button>\n                </div>\n              </div>\n            </div>\n        </div>\n    </span>)\n  }\n}\n\n\n","import Decimal from \"break_infinity.js\";\nimport CURRENCY_FUNCTIONS from \"../decimalInterfaces/currency_functionts\";\nimport Decimal_ExpoCommand from \"../decimalInterfaces/Decimal_ExpoCommand\";\nimport Engine from \"../Engine\";\n\nexport default class KnowledgeUpgrades {\n    constructor(public engine: Engine) {\n\n    }\n\n    upgradeDeltaX: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.2,\n            initial: 2,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.events.upgradeDX = data.events.upgradeDX.add(amount)\n            },\n            get: (data) => data.events.upgradeDX\n        },\n        currencyFns: CURRENCY_FUNCTIONS.knowledgeCurrencyFN,\n        hidden: (data) => false,\n        name: \"Upgrade ΔX\",\n    }\n\n    resetLearning: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.1,\n            initial: 10,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.events.knowledgePrestige = data.events.knowledgePrestige.add(amount);\n                this.resetEventProgress();\n            },\n            get: (data) => data.events.knowledgePrestige\n        },\n        currencyFns: CURRENCY_FUNCTIONS.dXUpgradeCurrencyFN,\n        hidden: (data) => data.events.examProgress === 0,\n        name: \"SEGMENT FAULT - Prestige Learning\",\n    }\n\n    resetEventProgress() {\n        const edata = this.engine.datamap.events;\n\n        edata.knowledge = new Decimal(0);\n        edata.examProgress = 0;\n        edata.eventVictories = 0;\n        edata.examFails = 0;\n        edata.lastEventResult = 0;\n        edata.upgradeDX = new Decimal(0);\n\n        if (this.engine.datamap.events.prestigeUpgrades.skipExam1) edata.examProgress = 1;\n\n        \n        this.engine.events.cleanupEvent();\n    }\n\n    get prestigePoints () {\n        return this.basePrestigePoints - this.usedPrestigePoints;\n    }\n\n    get basePrestigePoints () {\n        let base = this.engine.datamap.events.knowledgePrestige.toNumber() - 2\n        return base\n    }\n\n    get prestigeData () {\n        return this.engine.datamap.events.prestigeUpgrades;\n    }\n\n    get usedPrestigePoints () {\n        const pd = this.prestigeData;\n        let count = 0 \n\n        this.prestigeUpgrades.forEach(pu => {\n            if (pu.have() === true){\n                count += pu.cost;\n            } \n                \n        });\n\n        return count;\n    }\n\n\n\n    quadrupleXGain: PrestigePointUpgrade = {\n        name: \"Quadruple X Gain\",\n        cost: 300,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.quadrupleXGain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.quadrupleXGain\n    };\n\n    doubleXGain: PrestigePointUpgrade = {\n        name: \"Double X Gain\",\n        cost: 1,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.doubleXgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.doubleXgain\n    };\n\n    trippleXGain: PrestigePointUpgrade = {\n        name: \"Triple X Gain\",\n        cost: 20,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.tripleXgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.tripleXgain\n    };\n\n    squareXGain: PrestigePointUpgrade = {\n        name: \"Square X Gain\",\n        cost: 10000,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.squareXgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.squareXgain\n    };\n\n    quadrupleYGain: PrestigePointUpgrade = {\n        name: \"Quadruple Y Gain\",\n        cost: 300,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.quadrupleYGain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.quadrupleYGain\n    };\n\n    doubleYGain: PrestigePointUpgrade = {\n        name: \"Double Y Gain\",\n        cost: 1,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.doubleYgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.doubleYgain\n    };\n\n    trippleYGain: PrestigePointUpgrade = {\n        name: \"Triple Y Gain\",\n        cost: 20,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.tripleYgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.tripleYgain\n    };\n\n    squareYGain: PrestigePointUpgrade = {\n        name: \"Square Y Gain\",\n        cost: 10000,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.squareYgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.squareYgain\n    };\n\n    quadrupleZGain: PrestigePointUpgrade = {\n        name: \"Quadruple Z Gain\",\n        cost: 300,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.quadrupleZGain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.quadrupleZGain\n    };\n\n    doubleZGain: PrestigePointUpgrade = {\n        name: \"Double Z Gain\",\n        cost: 1,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.doubleZgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.doubleZgain\n    };\n\n    trippleZGain: PrestigePointUpgrade = {\n        name: \"Triple Z Gain\",\n        cost: 20,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.tripleZgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.tripleZgain\n    };\n\n    squareZGain: PrestigePointUpgrade = {\n        name: \"Square Z Gain\",\n        cost: 10000,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.squareZgain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.squareZgain\n    };\n    \n    \n    \n    doubleLearningProgress: PrestigePointUpgrade = {\n        name: \"Double Learning Progress\",\n        cost: 1,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.doubleLearningProgress = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.doubleLearningProgress\n    };\n    \n    doubleKnowledgeGain: PrestigePointUpgrade = {\n        name: \"Double Knowledge Gain\",\n        cost: 2,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.doubleKnowledgeGain = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.doubleKnowledgeGain\n    };\n    \n    skipExam1: PrestigePointUpgrade = {\n        name: \"Skip Exam 1\",\n        cost: 2,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.skipExam1 = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.skipExam1\n    };\n    \n    dischargeUpgrade: PrestigePointUpgrade = {\n        name: \"Upgrade Discahrge\",\n        cost: 3,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.dischargeUpgrade = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.dischargeUpgrade\n    };\n    \n    plusDeltaXSpellPowerUpgrade: PrestigePointUpgrade = {\n        name: \"Upgrade +DX Spell\",\n        cost: 3,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.plusDeltaXSpellPowerUpgrade = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.plusDeltaXSpellPowerUpgrade\n    };\n    \n    plusDeltaXSpellDurationUpgrade: PrestigePointUpgrade = {\n        name: \"Increased +DX Spell Duration\",\n        cost: 3,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.plusDeltaXSpellDurationUpgrade = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.plusDeltaXSpellDurationUpgrade\n    };\n    \n    unlockEventSpell: PrestigePointUpgrade = {\n        name: \"Unlock [Something To Care About] Spell\",\n        cost: 5,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.unlockEventSpell = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.unlockEventSpell\n    };\n    \n    doubleEventCooldownRecovery: PrestigePointUpgrade = {\n        name: \"Double Event Cooldown Recovery Speed\",\n        cost: 5,\n        action: ()=>{this.engine.datamap.events.prestigeUpgrades.doubleEventCooldownRecovery = true},\n        have: ()=>this.engine.datamap.events.prestigeUpgrades.doubleEventCooldownRecovery\n    };\n\n\n    \n    prestigeUpgrades = [\n        this.doubleXGain,\n        this.doubleKnowledgeGain,\n        this.doubleYGain,\n        this.doubleLearningProgress,\n        this.doubleZGain,\n        this.trippleXGain,\n        this.dischargeUpgrade,\n        this.trippleYGain,\n        this.plusDeltaXSpellPowerUpgrade,\n        this.trippleZGain,\n        this.plusDeltaXSpellDurationUpgrade,\n        this.skipExam1,\n        this.quadrupleXGain,\n        this.unlockEventSpell,\n        this.quadrupleYGain,\n        this.quadrupleZGain,\n        this.doubleEventCooldownRecovery,\n        this.squareXGain,\n        this.squareYGain,\n        this.squareZGain,\n    ]\n}\n\nexport interface PrestigePointUpgrade {\n    name: string;\n    action: VoidFunction;\n    cost: number;\n    have: ()=>boolean;\n}\n\nexport function unlockPrestigeUpgradeFormula (prestiges: number):number {\n    let base = prestiges - 2;\n    let each = base * 2\n    return Math.max(0,each);\n}","import React from 'react';\nimport { Datamap } from '../../engine/Datamap';\nimport Engine from '../../engine/Engine';\nimport { EVENT_RESULTS, Game_Event_Data as Game_Event_Info } from '../../engine/modules/GEvents';\nimport { flexRow, PrestigeUpgradeHave } from '../../CSSStyles';\nimport { canCheat } from '../../engine/externalfns/util';\nimport HumanPrefix from '../comps/HumanPrefix';\nimport PlanetDisplay from '../comps/PlanetDisplay';\nimport { unlockPrestigeUpgradeFormula } from '../../engine/modules/KnowledgeUpgrades';\n\ninterface CompProps {engine:Engine};\nclass PrestigeDiv extends React.Component<CompProps, {}> {\n\n  constructor(props: CompProps) {\n    super(props);\n    \n  }\n\n  \n  render() {\n    const engine = this.props.engine\n    const data = engine.datamap;\n    let count = unlockPrestigeUpgradeFormula(data.events.knowledgePrestige.toNumber());\n\n    return (\n        <div className='NavColumn'> \n          <span>\n          Available Points: {engine.knowledgeUpgrades.prestigePoints}\n          </span>\n          <span className='badButton'>\n          <button>\n            SEGMENT FAULT for no gain<br/>\n            Reset prestige points\n          </button>\n          </span>\n          <br/>\n          {engine.knowledgeUpgrades.prestigeUpgrades.slice(0,count).map((ppu, index)=>{\n            if (ppu.have()) {\n              return <button disabled key={`prestigeupgrade`+index} style={PrestigeUpgradeHave}>{ppu.name}</button>\n            }\n            const able = engine.knowledgeUpgrades.prestigePoints >=  ppu.cost\n            return (<button key={`prestigeupgrade`+index} disabled={!able} onClick={ppu.action}>\n              {ppu.name}<br/>\n              Cost: {ppu.cost}\n            </button>)\n          })}\n          <br/><br/>\n        </div>\n    );\n  }\n}\n\nexport default PrestigeDiv;","import React from 'react';\nimport { Datamap } from '../../engine/Datamap';\nimport Engine from '../../engine/Engine';\nimport { makeBasicCommand } from '../../engine/types/BasicCommand';\nimport CommandButton from '../comps/CommandButton';\nimport CommandGDButton from '../comps/CommandGDButton';\nimport ExpoButton from '../comps/GoodExpoButton';\nimport SCIENNOT from '../comps/Notation';\nimport * as Spells from '../../engine/modules/Spells';\nimport SpellDisplay from '../comps/SpellDisplay';\nimport EventRow from './EventRow';\nimport PopUpDiv from '../comps/PopUpDiv';\nimport PrestigeDiv from './PrestigeDiv';\n\ninterface CompProps {engine:Engine, data:Datamap};\nclass NavColumn extends React.Component<CompProps, {}> {\n\n  render() {\n    let engine = this.props.engine;\n    let data = this.props.data;\n\n    let discharge = makeBasicCommand('Discharge Y',engine.energyModule.discharge,`+${SCIENNOT.formatDecimal(engine.energyModule.dischargeValue())} X`,data.decimals.chargers.eq(0))\n\n    let seeEventBox = data.events.eventID != 0 || data.events.lastEventResult != 0;\n\n    return (\n      <div className='NavColumn'>\n        <div className='NavRow'>\n        <ExpoButton DEC={engine.firstCommands.create_energy_DEC} engine={engine} max/>\n        <ExpoButton DEC={engine.firstCommands.create_dx_fromY} engine={engine} />\n        <ExpoButton DEC={engine.firstCommands.create_energizer_DEC} engine={engine} />\n        <ExpoButton DEC={engine.firstCommands.create_charger_DEC} engine={engine}/>\n        <ExpoButton DEC={engine.firstCommands.create_dx_fromZ} engine={engine} />\n        <ExpoButton DEC={engine.firstCommands.create_momentum_DEC} engine={engine}/>\n        </div>\n        <div className='NavRow'>\n          <CommandButton command={discharge}/>\n          <SpellDisplay spell={engine.spells.increaseEffort} engine={engine}/>\n          <SpellDisplay spell={engine.spells.spell_stca} engine={engine}/>\n          <CommandGDButton command={engine.spells.unlock_mana} />\n          <CommandGDButton command={engine.spells.unlock_spell1} />\n          <CommandGDButton command={engine.spells.upgrade_discharge_1} />\n          <ExpoButton DEC={engine.spells.upgradeDischarge} engine={engine}/>\n        </div>\n        {(data.events.examProgress > 0) && <div className='NavRow'>\n          <ExpoButton DEC={engine.knowledgeUpgrades.upgradeDeltaX} engine={engine} />\n          <ExpoButton DEC={engine.knowledgeUpgrades.resetLearning} engine={engine} />\n          {engine.knowledgeUpgrades.basePrestigePoints > 0 && <PopUpDiv div={<PrestigeDiv engine={engine}/>} buttonText={`Spend ${engine.knowledgeUpgrades.prestigePoints} Prestige points`} />}\n        </div>}\n        {(seeEventBox)&&<EventRow data={data} engine={engine} />}\n\n  \n      </div>\n        \n    );\n  }\n}\n\nexport default NavColumn;","import { Datamap } from \"../Datamap\";\n\nexport interface BasicCommand {\n    label: string;\n    command: ()=>void;\n    description?: string;\n    hidden?: boolean;\n}\n\nexport interface CommandGodDamn {\n    label: string;\n    description: ()=>string;\n    command: ()=>void;\n    able: ()=>boolean;\n    hidden: ()=>boolean;\n}\n\nexport function makeBasicCommand (label: string, command: VoidFunction, description?: string, hidden?:boolean): BasicCommand{\n    return {\n        label, command, description, hidden\n    }\n}","import Decimal from 'break_infinity.js';\nimport React from 'react';\nimport { Datamap } from '../../engine/Datamap';\nimport Engine from '../../engine/Engine';\nimport DisplayDecimal from '../comps/DisplayDecimal';\nimport ListedResource, { ListedResourceNumber } from '../comps/ListedResource';\n\n\ninterface CompProps {engine:Engine, data:Datamap};\nclass ResourceColumn extends React.Component<CompProps, {}> {\n\n  render() {\n    let engine = this.props.engine;\n    let data = this.props.data;\n    return (\n      <div className='ResourceColumn'>\n        <ListedResource decimal={data.decimals.effort} name={'X'} />\n        <ListedResource decimal={data.decimals.charge} name={'Y'} hide={0} />\n        <ListedResource decimal={data.decimals.mana} name={'Z'} hide={0} />\n        <hr/>\n        {/*<ListedResource decimal={data.decimals.energy} name={'ΔX'} hide={0} />\n        <ListedResource decimal={data.decimals.chargers} name={'ΔY'} hide={0} />\n        <ListedResource decimal={data.decimals.momentum} name={'ΔXP'} hide={0} />\n        <ListedResource decimal={data.decimals.energizers} name={'Boosters'} hide={0} />\n        <hr/>*/}\n        <ListedResource decimal={engine.memory.deltaX} name={'X /s'} />\n        <ListedResource decimal={engine.memory.deltaY} name={'Y /s'} />\n        <hr/>\n        <ListedResourceNumber num={data.events.eventVictories} name={'✓'} hide={0} />  \n        <ListedResourceNumber num={data.events.examProgress} name={'✰'} hide={0} />  \n        <ListedResource decimal={data.events.knowledge} name={'🕮'} hide={0} />   \n        <hr/>\n        <ListedResourceNumber num={data.spellTimers.spell1/1000} name='+ΔXs' hide={0} />\n      </div>\n        \n    );\n  }\n}\n\nexport default ResourceColumn;","import React from 'react';\nimport { Datamap } from '../../engine/Datamap';\nimport Engine from '../../engine/Engine';\nimport NavColumn from './NavColumn';\nimport ResourceColumn from './ResourceColumn';\n\n\ninterface CompProps {engine:Engine, data:Datamap};\nclass MainContainer extends React.Component<CompProps, {}> {\n\n  render() {\n    let engine = this.props.engine;\n    let data = this.props.data;\n    return (\n      <div className='MainContainer'>\n        <ResourceColumn engine={engine} data={data} />\n        <NavColumn engine={engine} data={data} />\n      </div>\n        \n    );\n  }\n}\n\nexport default MainContainer;","import React from 'react';\n\nimport Engine from './engine/Engine';\nimport { Datamap } from './engine/Datamap';\nimport { flexRow, spaceBetween } from './CSSStyles';\nimport './App.css';\nimport HeaderRow from './reactui/layout/HeaderRow';\nimport DisplayDecimal from './reactui/comps/DisplayDecimal';\nimport ExpoButton from './reactui/comps/GoodExpoButton';\nimport MainContainer from './reactui/layout/MainContainer';\n\n\ninterface AppProps { engine: Engine };\nexport interface AppState {\n  data: Datamap\n};\nclass App extends React.Component<AppProps, AppState> {\n\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      data: this.props.engine.datamap,\n    }\n  }\n\n\n  notify = () => {\n    this.setState({\n      data: this.props.engine.datamap,\n    })\n  }\n\n\n\n  componentDidMount() {\n    const engine = this.props.engine;\n    \n    engine.setNotify(this.notify)\n\n    engine.extraLoad();\n    engine.notify();\n\n    engine.start();\n  }\n\n\n\n  render() {\n    let state = this.state;\n    let engine = this.props.engine;\n    let data = state.data;\n    return (<div className='AppThree'>\n      <HeaderRow engine={engine} data={data} />\n      <MainContainer engine={engine} data={data} />      \n    </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Decimal from \"break_infinity.js\";\n\nexport interface Datamap {\n    autosave: boolean;\n    autosaveCounter: number;\n    last: number;\n    decimals: {\n        effort: Decimal;\n        energy: Decimal;\n        dxfromy: Decimal;\n        dxfromz: Decimal;\n        momentum: Decimal;\n        chargers: Decimal;\n        charge: Decimal;\n        energizers: Decimal;\n        mana: Decimal;\n    }\n    spellData: {\n        manaUnlocked: boolean,\n        spell1Unlocked: boolean,\n        dischargeUpgrade1: boolean,\n        dischargeUpgrades: Decimal,\n    }\n    spellTimers: {\n        spell1: number;\n        spell2: number;\n        spell3: number;\n        spell4: number;\n        spell5: number;\n    };\n    events: {\n        eventTimeCounter: number;\n\n        lastEventResult: number;\n        \n        eventID: number;\n        eventRNG: number;\n        eventData: any[];\n        \n        eventVictories:number;\n        examFails:number;\n        examProgress: number;\n\n        knowledge: Decimal;\n        upgradeDX: Decimal;\n\n        knowledgePrestige: Decimal;\n        prestigeUpgrades: {\n            doubleLearningProgress: boolean,\n            doubleKnowledgeGain: boolean,\n            skipExam1: boolean,\n            dischargeUpgrade: boolean,\n            plusDeltaXSpellPowerUpgrade: boolean,\n            plusDeltaXSpellDurationUpgrade: boolean,\n            unlockEventSpell: boolean,\n            doubleEventCooldownRecovery: boolean,\n            \n            quadrupleXGain: boolean,\n            doubleXgain: boolean,\n            tripleXgain: boolean,\n            squareXgain: boolean,\n\n            quadrupleYGain: boolean,\n            doubleYgain: boolean,\n            tripleYgain: boolean,\n            squareYgain: boolean,\n            \n            quadrupleZGain: boolean,\n            doubleZgain: boolean,\n            tripleZgain: boolean,\n            squareZgain: boolean,\n        }\n    }\n}\n\nexport function newDefaultMap () {\n    let map: Datamap = {\n        autosave: false,\n        autosaveCounter: 0,\n        last: Date.now(),\n        decimals: {\n            effort: new Decimal(1),\n            energy: new Decimal(0),\n            dxfromy: new Decimal(0),\n            dxfromz: new Decimal(0),\n            momentum: new Decimal(0),\n            chargers: new Decimal(0),\n            charge: new Decimal(0),\n            energizers: new Decimal(0),\n            mana: new Decimal(0),\n        },\n        spellData: {\n            manaUnlocked: false,\n            spell1Unlocked: false,\n            dischargeUpgrade1: false,\n            dischargeUpgrades: new Decimal(0)\n        },\n        spellTimers: {\n            spell1: 0,\n            spell2: 0,\n            spell3: 0,\n            spell4: 0,\n            spell5: 0,\n        },\n        events: {\n            eventData: [],\n            eventID: 0,\n            eventRNG: 0,\n            eventTimeCounter: 0,\n            lastEventResult: 0,\n            eventVictories: 0,\n            examFails: 0,\n            examProgress: 0,\n            knowledge: new Decimal(0),\n            upgradeDX: new Decimal(0),\n            knowledgePrestige: new Decimal(0),\n            prestigeUpgrades: prestigeUpgrades_Default(),\n\n        }\n    }\n    return map;\n}\n\nexport function setDecimals(data:Datamap) {\n    data.decimals.effort = new Decimal(data.decimals.effort);\n    data.decimals.energy = new Decimal(data.decimals.energy);\n    data.decimals.dxfromz = new Decimal(data.decimals.dxfromz);\n    data.decimals.dxfromy = new Decimal(data.decimals.dxfromy);\n    data.decimals.momentum = new Decimal(data.decimals.momentum);\n    data.decimals.charge = new Decimal(data.decimals.charge);\n    data.decimals.chargers = new Decimal(data.decimals.chargers);\n    data.decimals.energizers = new Decimal(data.decimals.energizers);\n    data.decimals.mana = new Decimal(data.decimals.mana);\n    data.events.knowledge = new Decimal(data.events.knowledge);\n    data.events.upgradeDX = new Decimal(data.events.upgradeDX);\n    data.events.knowledgePrestige = new Decimal(data.events.knowledgePrestige);\n    data.spellData.dischargeUpgrades = new Decimal(data.spellData.dischargeUpgrades);\n}\n\nexport function prestigeUpgrades_Default () {\n    return {\n\n        \n        doubleLearningProgress: false, //implemented\n        doubleKnowledgeGain: false, //implemented\n        skipExam1: false, //implemented\n        \n        dischargeUpgrade: false, //implemented\n        plusDeltaXSpellPowerUpgrade: false, //implemented\n        plusDeltaXSpellDurationUpgrade: false, //implemented\n        unlockEventSpell: false, //implemented\n        \n        doubleEventCooldownRecovery: false, //implemented\n        \n        quadrupleXGain: false, //implemented\n        doubleXgain: false,\n        tripleXgain: false,\n        squareXgain: false,\n\n        quadrupleYGain: false, //implemented\n        doubleYgain: false,\n        tripleYgain: false,\n        squareYgain: false,\n\n        quadrupleZGain: false, //implemented\n        doubleZgain: false,\n        tripleZgain: false,\n        squareZgain: false,\n    }\n}","import {Datamap, newDefaultMap, setDecimals} from './Datamap';\nimport * as _ from 'lodash';\n\nconst GAMEKEY = 'stca'\n\nexport default abstract class CoreEngine {\n\n    datamap: Datamap = newDefaultMap();\n    loop: NodeJS.Timeout | undefined = undefined;\n    abstract extraLoad: ()=>void;\n    notify: VoidFunction = ()=>{};\n\n    constructor(){\n        console.log('MADE ME');\n        \n        this.datamap.last = Date.now();\n        this.quietLoad();\n        //this.start();\n    }\n\n    setNotify (newnotify: VoidFunction) {\n        this.notify = newnotify;\n    }\n\n    start = () => {\n        if (!this.loop) {\n            this.loop = setInterval(this.tick, 200);\n        }\n    }\n\n    stop = () => {\n        if (this.loop){\n            clearTimeout(this.loop);\n            this.loop = undefined;\n        } \n    }\n\n    save= () => {\n        //console.log('saving');\n        this.datamap.autosaveCounter = 0;\n        \n        console.log('saved');\n\n        let stringy = JSON.stringify(this.datamap);\n        let based = window.btoa(stringy);\n        localStorage.setItem(GAMEKEY, based)\n\n    }\n\n    load= () => {\n        this.quietLoad();        \n        this.notify();\n    }\n\n    reset = () => {\n        this.stop()\n        this.datamap = newDefaultMap();\n        this.checkSet();\n        this.extraLoad();\n        this.start();\n        this.notify();\n    }\n\n    quietLoad = () => {\n        let combstr = localStorage.getItem(GAMEKEY);\n        \n        if (combstr != null){\n            let stringy = window.atob(combstr);\n            let oldobj = JSON.parse(stringy);\n            //console.log(oldobj);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n\n        this.checkSet();\n        if (this.extraLoad) {\n            this.extraLoad(); //doesn;t work when internally called\n        } else console.log('no extra load');\n        \n    }\n    \n    tick = () => {\n        \n        \n        let newnow = Date.now();\n        let oldnow = this.datamap.last;\n        let delta = newnow - oldnow;\n        \n        this.datamap.last = newnow;\n        \n        this.processDelta(delta)\n        this.notify();\n    }\n    \n    abstract processDelta (delta: number): void;\n    \n    checkSet = () => {\n        setDecimals(this.datamap);\n    }\n}\n\n\n","import Engine from \"../Engine\";\n\nexport default class EnergyModule {\n    constructor(public engine: Engine) {\n\n    }\n\n    discharge = () => {\n        let gain = this.dischargeValue();\n        if (this.engine.datamap.spellData.manaUnlocked) {\n            let newZ = this.engine.datamap.decimals.charge;\n            if (this.engine.datamap.events.prestigeUpgrades.doubleZgain) newZ = newZ.times(2);\n            if (this.engine.datamap.events.prestigeUpgrades.tripleZgain) newZ = newZ.times(3);\n            if (this.engine.datamap.events.prestigeUpgrades.quadrupleZGain) newZ = newZ.times(4);\n            if (this.engine.datamap.events.prestigeUpgrades.squareZgain) newZ = newZ.times(newZ);\n           this.engine.datamap.decimals.mana = newZ;\n        }\n        this.engine.firstCommands.clearCharge();\n        this.engine.datamap.decimals.effort = this.engine.datamap.decimals.effort.add(gain);\n        this.engine.notify();\n    }\n\n    dischargeValue = () => {\n        let decimals = this.engine.datamap.decimals;\n        let energy_base = decimals.energy;\n        let charge_mult = decimals.charge;\n        let momentum_mult = decimals.momentum;\n\n        \n        let gain = energy_base.times(charge_mult).times(momentum_mult);\n        \n        if (this.engine.datamap.spellData.dischargeUpgrades.greaterThan(0)) gain = gain.times(this.engine.datamap.spellData.dischargeUpgrades.add(1))\n        if (this.engine.datamap.spellData.dischargeUpgrade1) gain = gain.times(10)\n        if (this.engine.datamap.events.prestigeUpgrades.dischargeUpgrade) gain = gain.times(10)\n        //pplet gain = this.engine.datamap.decimals.charge.times(this.engine.firstCommands.gainPerSecond).times(10);\n        /*if (this.engine.datamap.decimals.mana.greaterThan(0)) {\n            gain = gain.times(this.engine.datamap.decimals.mana.add(1))\n        }*/\n        return gain\n    }\n}","import Decimal from \"break_infinity.js\";\nimport CURRENCY_FUNCTIONS from \"../decimalInterfaces/currency_functionts\";\nimport Decimal_ExpoCommand from \"../decimalInterfaces/Decimal_ExpoCommand\";\nimport Engine from \"../Engine\";\n\nexport default class FirstCommands {\n    constructor(public engine: Engine) {\n\n    }\n\n    create_energy_DEC: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.5,\n            initial: 1,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.decimals.energy = data.decimals.energy.add(amount)\n            },\n            get: (data) => data.decimals.energy\n        },\n        currencyFns: CURRENCY_FUNCTIONS.effortCurrencyFN,\n        hidden: () => false,\n        name: \"+1 ΔX\",\n    }\n\n    create_dx_fromY: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.5,\n            initial: 1,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.decimals.dxfromy = data.decimals.dxfromy.add(amount)\n            },\n            get: (data) => data.decimals.dxfromy\n        },\n        currencyFns: CURRENCY_FUNCTIONS.yCurrencyFN,\n        hidden: () => this.engine.datamap.events.knowledgePrestige.lessThan(2),\n        name: \"ΔX Power\",\n    }\n\n    create_dx_fromZ: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.5,\n            initial: 1,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.decimals.dxfromz = data.decimals.dxfromz.add(amount)\n            },\n            get: (data) => data.decimals.dxfromz\n        },\n        currencyFns: CURRENCY_FUNCTIONS.ZCurrencyFN,\n        hidden: () => this.engine.datamap.events.knowledgePrestige.lessThan(4),\n        name: \"ΔX Power\",\n    }\n\n    create_momentum_DEC: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.3,\n            initial: 16,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                this.t2Prestige();\n                data.decimals.momentum = data.decimals.momentum.add(amount)\n            },\n            get: (data) => data.decimals.momentum\n        },\n        currencyFns: CURRENCY_FUNCTIONS.energyCurrencyFN,\n        hidden: () => false,\n        name: \"Prestige for ΔX Power\",\n    }\n\n    toggleCheating = () => {\n        this.engine.memory.cheating = !this.engine.memory.cheating;\n        this.engine.notify();\n    }\n\n    create_charger_DEC: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.4,\n            initial: 15,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                this.t1Prestige();\n                data.decimals.chargers = data.decimals.chargers.add(amount)\n            },\n            get: (data) => data.decimals.chargers\n        },\n        currencyFns: CURRENCY_FUNCTIONS.energyCurrencyFN,\n        hidden: (data) => data.decimals.momentum.lessThan(3),\n        name: \"Prestige for ΔY\",\n    }\n\n    create_energizer_DEC: Decimal_ExpoCommand = {\n        expo: {\n            coefficient: 1.2,\n            initial: 1000,\n        },\n        countFns: {\n            gain: (data, amount) => { \n                data.decimals.energizers = data.decimals.energizers.add(amount)\n            },\n            get: (data) => data.decimals.energizers\n        },\n        currencyFns: CURRENCY_FUNCTIONS.effortCurrencyFN,\n        hidden: (data) => data.decimals.momentum.lessThan(6),\n        name: \"Create Charge Booster\",\n    }\n\n    clearCharge = () => {\n        const data = this.engine.datamap;\n        data.decimals.charge = new Decimal(0);\n    }\n\n    t1Prestige = () => {\n        const data = this.engine.datamap;\n\n        data.decimals.effort = new Decimal(1);\n        data.decimals.energy = new Decimal(0);\n        data.decimals.mana = new Decimal(0);\n        data.decimals.energizers = new Decimal(0);\n        data.decimals.chargers = new Decimal(0);\n\n        data.decimals.dxfromy = new Decimal(0);\n\n        this.engine.spells.clearTimers();\n        this.clearCharge();\n    }\n\n    t2Prestige = () => {\n        const data = this.engine.datamap;\n        data.decimals.chargers = new Decimal(0);\n\n        data.decimals.dxfromz = new Decimal(0);\n\n        this.t1Prestige();\n    }\n\n}","import Decimal from \"break_infinity.js\";\nimport Engine from \"../Engine\";\n\nexport default class ActiveMemory {\n    constructor (public engine: Engine) {\n        \n    }\n\n    deltaX: Decimal = new Decimal(0);\n    deltaY: Decimal = new Decimal(0);\n    cheating: boolean = false;\n\n    mainDelta = (delta:number) => {\n        //OPTIMIZE ME!!!\n        const data = this.engine.datamap;\n\n        \n        const effort = data.decimals.effort;\n        const energy = data.decimals.energy;\n        const momentum = data.decimals.momentum;\n        const chargers = data.decimals.chargers;\n        const energizers = data.decimals.energizers;\n        const prestigeUpgrades = data.events.prestigeUpgrades;\n        \n        //all O(1) ya?\n        \n        let delta_in_seconds = delta / 1000;\n        if (this.cheating) {\n            delta_in_seconds = delta_in_seconds * 60;\n        }\n        \n\n        let gain = energy.times(delta_in_seconds);\n\n        if (chargers.greaterThan(0)) {\n            let deltaY = chargers.times(delta_in_seconds).div(60);\n            if (energizers.greaterThan(0)) deltaY = deltaY.times(energizers)\n\n            if (prestigeUpgrades.doubleYgain) deltaY = deltaY.times(2);\n            if (prestigeUpgrades.tripleYgain) deltaY = deltaY.times(3);\n            if (prestigeUpgrades.quadrupleYGain) deltaY = deltaY.times(4);\n            if (prestigeUpgrades.squareXgain) deltaY = deltaY.times(deltaY);\n            \n            this.deltaY = deltaY.times(1000).div(delta);\n            const newY = data.decimals.charge.add(deltaY);\n            data.decimals.charge = newY;\n\n            //gain = gain.times(data.decimals.charge.add(1))\n        }\n        \n        if (momentum.greaterThan(0)) {\n            gain = gain.times(momentum.add(1))\n        }\n\n        if (data.events.upgradeDX.greaterThan(0)) {\n            gain = gain.times(data.events.upgradeDX.add(1))\n        }\n\n        if (data.spellTimers.spell1 > 0) {\n            let maxDelta = Math.min(data.spellTimers.spell1, delta);\n            data.spellTimers.spell1 = Math.max(0, data.spellTimers.spell1 - delta);\n            let pow = 10;\n            if (this.engine.datamap.events.prestigeUpgrades.plusDeltaXSpellPowerUpgrade) pow = pow * 2;\n            gain = gain.times(pow).times(maxDelta).div(delta);\n        }\n\n        if (prestigeUpgrades.doubleXgain) gain = gain.times(2);\n        if (prestigeUpgrades.tripleXgain) gain = gain.times(3);\n        if (prestigeUpgrades.quadrupleXGain) gain = gain.times(4);\n        if (prestigeUpgrades.squareXgain) gain = gain.times(gain);\n\n        if (data.decimals.dxfromy.greaterThan(0)) gain = gain.times(data.decimals.dxfromy.add(1))\n        if (data.decimals.dxfromz.greaterThan(0)) gain = gain.times(data.decimals.dxfromz.add(1))\n\n\n        this.deltaX = gain.times(1000).div(delta);\n        data.decimals.effort = effort.add(gain);\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './AppThree';\nimport * as serviceWorker from './serviceWorker';\nimport Engine from './engine/Engine';\n\nconst ENGINE = new Engine();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App engine={ENGINE} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import _ from \"lodash\";\nimport CoreEngine from \"./CoreEngine\";\nimport { newDefaultMap } from \"./Datamap\";\nimport EnergyModule from \"./modules/EnergyModule\";\nimport FirstCommands from \"./modules/FirstCommands\";\nimport Spells from \"./modules/Spells\";\nimport ActiveMemory from \"./modules/ActiveMemory\";\nimport GEvents from \"./modules/GEvents\";\nimport KnowledgeUpgrades from \"./modules/KnowledgeUpgrades\";\n\n\nexport const AUTOSAVE_INTERVAL = 1000 * 60;\n\nexport default class Engine extends CoreEngine {\n\n    firstCommands: FirstCommands = new FirstCommands(this);\n    energyModule: EnergyModule = new EnergyModule(this);\n    spells: Spells = new Spells(this);\n    memory: ActiveMemory = new ActiveMemory(this);\n    events: GEvents = new GEvents(this);\n    knowledgeUpgrades: KnowledgeUpgrades = new KnowledgeUpgrades(this);\n\n    processDelta = (delta: number) => {\n\n        this.memory.mainDelta(delta)\n        this.events.delta(delta);\n\n        if (((this.datamap.autosaveCounter += delta) > AUTOSAVE_INTERVAL) && this.datamap.autosave === true) {\n\n            this.save();\n            this.datamap.autosaveCounter = 0;\n        }\n    }\n\n    import = (basedstr: string) => {\n        this.datamap.autosave = false;\n\n        //var LZUTF8 = require('lzutf8');\n\n        //console.log(lzutf8str);\n\n        //let arrayStr = lzutf8str.split(',')\n        //let arrayInt = arrayStr.map(value => parseInt(value))\n        //let magicArray = Uint8Array.of(...arrayInt);\n\n\n        //var string = new TextDecoder(\"utf-8\").decode(lzutf8str);\n        //let test = new Uint8Array(lzutf8str)\n        //let uint8array: Uint8Array = new Uint8Array(lzutf8str)\n        //let uint8array = new Uint8Array()\n        //var uint8array = new TextEncoder().encode(lzutf8str);\n        //console.log(uint8array);\n\n        //var output = LZUTF8.encodeUTF8(lzutf8str);\n        //console.log(output, arrayStr, magicArray);\n\n        //        let check = LZUTF8.decompress(magicArray);\n        //console.log(check);\n\n        /**\n         * \n      */\n        let plain = window.atob(basedstr);\n\n\n        let combstr = plain;\n        if (combstr != null) {\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n\n        this.datamap.autosave = false;\n        this.checkSet();\n        this.extraLoad();\n\n    }\n\n    export = () => {\n        let dataString = JSON.stringify(this.datamap);\n        let based = window.btoa(dataString);\n        //var LZUTF8 = require('lzutf8');\n        //let output = LZUTF8.compress(dataString);\n        //  console.log(output)\n        //console.log(dataString.length)\n\n        //        download(`prophet_export_${Date.now()}.txt`,dataString)\n        download(`stca_export_${Date.now()}.txt`, based)\n\n        function download(filename: string, text: string) {\n            var element = document.createElement('a');\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n            element.setAttribute('download', filename);\n\n            element.style.display = 'none';\n            document.body.appendChild(element);\n\n            element.click();\n\n            document.body.removeChild(element);\n        }\n\n    }\n\n    autosaveToggle = () => {\n        this.datamap.autosaveCounter = 0;\n        this.datamap.autosave = !this.datamap.autosave;\n        this.notify();\n    }\n\n    extraLoad = () => {\n        console.log('EXTRALOAD');\n\n    }\n\n}\n\n"],"sourceRoot":""}